// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gnmi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gnmi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gnmi {
class NotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Notification> {
} _Notification_default_instance_;
class UpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Update> {
} _Update_default_instance_;
class TypedValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TypedValue> {
  public:
  ::google::protobuf::internal::ArenaStringPtr string_val_;
  ::google::protobuf::int64 int_val_;
  ::google::protobuf::uint64 uint_val_;
  bool bool_val_;
  ::google::protobuf::internal::ArenaStringPtr bytes_val_;
  float float_val_;
  const ::gnmi::Decimal64* decimal_val_;
  const ::gnmi::ScalarArray* leaflist_val_;
  const ::google::protobuf::Any* any_val_;
  ::google::protobuf::internal::ArenaStringPtr json_val_;
  ::google::protobuf::internal::ArenaStringPtr json_ietf_val_;
  ::google::protobuf::internal::ArenaStringPtr ascii_val_;
} _TypedValue_default_instance_;
class PathDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Path> {
} _Path_default_instance_;
class ValueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Value> {
} _Value_default_instance_;
class ErrorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Error> {
} _Error_default_instance_;
class Decimal64DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Decimal64> {
} _Decimal64_default_instance_;
class ScalarArrayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ScalarArray> {
} _ScalarArray_default_instance_;
class SubscribeRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRequest> {
  public:
  const ::gnmi::SubscriptionList* subscribe_;
  const ::gnmi::Poll* poll_;
  const ::gnmi::AliasList* aliases_;
} _SubscribeRequest_default_instance_;
class PollDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Poll> {
} _Poll_default_instance_;
class SubscribeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubscribeResponse> {
  public:
  const ::gnmi::Notification* update_;
  bool sync_response_;
  const ::gnmi::Error* error_;
} _SubscribeResponse_default_instance_;
class SubscriptionListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SubscriptionList> {
} _SubscriptionList_default_instance_;
class SubscriptionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Subscription> {
} _Subscription_default_instance_;
class QOSMarkingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<QOSMarking> {
} _QOSMarking_default_instance_;
class AliasDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Alias> {
} _Alias_default_instance_;
class AliasListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AliasList> {
} _AliasList_default_instance_;
class SetRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetRequest> {
} _SetRequest_default_instance_;
class SetResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetResponse> {
} _SetResponse_default_instance_;
class UpdateResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateResult> {
} _UpdateResult_default_instance_;
class GetRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetRequest> {
} _GetRequest_default_instance_;
class GetResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GetResponse> {
} _GetResponse_default_instance_;
class CapabilityRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CapabilityRequest> {
} _CapabilityRequest_default_instance_;
class CapabilityResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CapabilityResponse> {
} _CapabilityResponse_default_instance_;
class ModelDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ModelData> {
} _ModelData_default_instance_;

namespace protobuf_gnmi_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, alias_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, update_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Notification, delete__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Update, val_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypedValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypedValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), string_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), int_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), uint_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), bool_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), bytes_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), float_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), decimal_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), leaflist_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), any_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), json_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), json_ietf_val_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_TypedValue_default_instance_), ascii_val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypedValue, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, element_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Path, origin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Value, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decimal64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decimal64, digits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decimal64, precision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScalarArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScalarArray, element_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SubscribeRequest_default_instance_), subscribe_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SubscribeRequest_default_instance_), poll_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SubscribeRequest_default_instance_), aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeRequest, request_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Poll, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SubscribeResponse_default_instance_), update_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SubscribeResponse_default_instance_), sync_response_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_SubscribeResponse_default_instance_), error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribeResponse, response_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, subscription_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, use_aliases_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, qos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, allow_aggregation_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, use_models_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscriptionList, encoding_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscription, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscription, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscription, sample_interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscription, suppress_redundant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Subscription, heartbeat_interval_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QOSMarking, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QOSMarking, marking_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Alias, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Alias, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Alias, alias_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AliasList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AliasList, alias_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRequest, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRequest, delete__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRequest, replace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetRequest, update_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetResponse, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetResponse, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetResponse, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateResult, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateResult, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateResult, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateResult, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetRequest, use_models_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, notification_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResponse, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapabilityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapabilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapabilityResponse, supported_models_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapabilityResponse, supported_encodings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CapabilityResponse, gnmi_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelData, organization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelData, version_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Notification)},
  { 10, -1, sizeof(Update)},
  { 18, -1, sizeof(TypedValue)},
  { 36, -1, sizeof(Path)},
  { 43, -1, sizeof(Value)},
  { 50, -1, sizeof(Error)},
  { 58, -1, sizeof(Decimal64)},
  { 65, -1, sizeof(ScalarArray)},
  { 71, -1, sizeof(SubscribeRequest)},
  { 80, -1, sizeof(Poll)},
  { 85, -1, sizeof(SubscribeResponse)},
  { 94, -1, sizeof(SubscriptionList)},
  { 107, -1, sizeof(Subscription)},
  { 117, -1, sizeof(QOSMarking)},
  { 123, -1, sizeof(Alias)},
  { 130, -1, sizeof(AliasList)},
  { 136, -1, sizeof(SetRequest)},
  { 145, -1, sizeof(SetResponse)},
  { 154, -1, sizeof(UpdateResult)},
  { 163, -1, sizeof(GetRequest)},
  { 173, -1, sizeof(GetResponse)},
  { 180, -1, sizeof(CapabilityRequest)},
  { 185, -1, sizeof(CapabilityResponse)},
  { 193, -1, sizeof(ModelData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Update_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TypedValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Path_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Value_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Decimal64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ScalarArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Poll_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubscribeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SubscriptionList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Subscription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_QOSMarking_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Alias_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AliasList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GetResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CapabilityRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CapabilityResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ModelData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gnmi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

}  // namespace

void TableStruct::Shutdown() {
  _Notification_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Update_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _TypedValue_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Path_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Value_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Error_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Decimal64_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ScalarArray_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _SubscribeRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _Poll_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _SubscribeResponse_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _SubscriptionList_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _Subscription_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _QOSMarking_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _Alias_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _AliasList_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _SetRequest_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _SetResponse_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _UpdateResult_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _GetRequest_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _GetResponse_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CapabilityRequest_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CapabilityResponse_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _ModelData_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::InitDefaults();
  _Notification_default_instance_.DefaultConstruct();
  _Update_default_instance_.DefaultConstruct();
  _TypedValue_default_instance_.DefaultConstruct();
  _Path_default_instance_.DefaultConstruct();
  _Value_default_instance_.DefaultConstruct();
  _Error_default_instance_.DefaultConstruct();
  _Decimal64_default_instance_.DefaultConstruct();
  _ScalarArray_default_instance_.DefaultConstruct();
  _SubscribeRequest_default_instance_.DefaultConstruct();
  _Poll_default_instance_.DefaultConstruct();
  _SubscribeResponse_default_instance_.DefaultConstruct();
  _SubscriptionList_default_instance_.DefaultConstruct();
  _Subscription_default_instance_.DefaultConstruct();
  _QOSMarking_default_instance_.DefaultConstruct();
  _Alias_default_instance_.DefaultConstruct();
  _AliasList_default_instance_.DefaultConstruct();
  _SetRequest_default_instance_.DefaultConstruct();
  _SetResponse_default_instance_.DefaultConstruct();
  _UpdateResult_default_instance_.DefaultConstruct();
  _GetRequest_default_instance_.DefaultConstruct();
  _GetResponse_default_instance_.DefaultConstruct();
  _CapabilityRequest_default_instance_.DefaultConstruct();
  _CapabilityResponse_default_instance_.DefaultConstruct();
  _ModelData_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterExtension(
    ::google::protobuf::FileOptions::internal_default_instance(),
    1001, 9, false, false);
  _Notification_default_instance_.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _Update_default_instance_.get_mutable()->path_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _Update_default_instance_.get_mutable()->value_ = const_cast< ::gnmi::Value*>(
      ::gnmi::Value::internal_default_instance());
  _Update_default_instance_.get_mutable()->val_ = const_cast< ::gnmi::TypedValue*>(
      ::gnmi::TypedValue::internal_default_instance());
  _TypedValue_default_instance_.string_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _TypedValue_default_instance_.int_val_ = GOOGLE_LONGLONG(0);
  _TypedValue_default_instance_.uint_val_ = GOOGLE_ULONGLONG(0);
  _TypedValue_default_instance_.bool_val_ = false;
  _TypedValue_default_instance_.bytes_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _TypedValue_default_instance_.float_val_ = 0;
  _TypedValue_default_instance_.decimal_val_ = const_cast< ::gnmi::Decimal64*>(
      ::gnmi::Decimal64::internal_default_instance());
  _TypedValue_default_instance_.leaflist_val_ = const_cast< ::gnmi::ScalarArray*>(
      ::gnmi::ScalarArray::internal_default_instance());
  _TypedValue_default_instance_.any_val_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _TypedValue_default_instance_.json_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _TypedValue_default_instance_.json_ietf_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _TypedValue_default_instance_.ascii_val_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _Error_default_instance_.get_mutable()->data_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
  _SubscribeRequest_default_instance_.subscribe_ = const_cast< ::gnmi::SubscriptionList*>(
      ::gnmi::SubscriptionList::internal_default_instance());
  _SubscribeRequest_default_instance_.poll_ = const_cast< ::gnmi::Poll*>(
      ::gnmi::Poll::internal_default_instance());
  _SubscribeRequest_default_instance_.aliases_ = const_cast< ::gnmi::AliasList*>(
      ::gnmi::AliasList::internal_default_instance());
  _SubscribeResponse_default_instance_.update_ = const_cast< ::gnmi::Notification*>(
      ::gnmi::Notification::internal_default_instance());
  _SubscribeResponse_default_instance_.sync_response_ = false;
  _SubscribeResponse_default_instance_.error_ = const_cast< ::gnmi::Error*>(
      ::gnmi::Error::internal_default_instance());
  _SubscriptionList_default_instance_.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _SubscriptionList_default_instance_.get_mutable()->qos_ = const_cast< ::gnmi::QOSMarking*>(
      ::gnmi::QOSMarking::internal_default_instance());
  _Subscription_default_instance_.get_mutable()->path_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _Alias_default_instance_.get_mutable()->path_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _SetRequest_default_instance_.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _SetResponse_default_instance_.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _SetResponse_default_instance_.get_mutable()->message_ = const_cast< ::gnmi::Error*>(
      ::gnmi::Error::internal_default_instance());
  _UpdateResult_default_instance_.get_mutable()->path_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _UpdateResult_default_instance_.get_mutable()->message_ = const_cast< ::gnmi::Error*>(
      ::gnmi::Error::internal_default_instance());
  _GetRequest_default_instance_.get_mutable()->prefix_ = const_cast< ::gnmi::Path*>(
      ::gnmi::Path::internal_default_instance());
  _GetResponse_default_instance_.get_mutable()->error_ = const_cast< ::gnmi::Error*>(
      ::gnmi::Error::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\ngnmi.proto\022\004gnmi\032\031google/protobuf/any."
      "proto\032 google/protobuf/descriptor.proto\""
      "\206\001\n\014Notification\022\021\n\ttimestamp\030\001 \001(\003\022\032\n\006p"
      "refix\030\002 \001(\0132\n.gnmi.Path\022\r\n\005alias\030\003 \001(\t\022\034"
      "\n\006update\030\004 \003(\0132\014.gnmi.Update\022\032\n\006delete\030\005"
      " \003(\0132\n.gnmi.Path\"a\n\006Update\022\030\n\004path\030\001 \001(\013"
      "2\n.gnmi.Path\022\036\n\005value\030\002 \001(\0132\013.gnmi.Value"
      "B\002\030\001\022\035\n\003val\030\003 \001(\0132\020.gnmi.TypedValue\"\316\002\n\n"
      "TypedValue\022\024\n\nstring_val\030\001 \001(\tH\000\022\021\n\007int_"
      "val\030\002 \001(\003H\000\022\022\n\010uint_val\030\003 \001(\004H\000\022\022\n\010bool_"
      "val\030\004 \001(\010H\000\022\023\n\tbytes_val\030\005 \001(\014H\000\022\023\n\tfloa"
      "t_val\030\006 \001(\002H\000\022&\n\013decimal_val\030\007 \001(\0132\017.gnm"
      "i.Decimal64H\000\022)\n\014leaflist_val\030\010 \001(\0132\021.gn"
      "mi.ScalarArrayH\000\022\'\n\007any_val\030\t \001(\0132\024.goog"
      "le.protobuf.AnyH\000\022\022\n\010json_val\030\n \001(\014H\000\022\027\n"
      "\rjson_ietf_val\030\013 \001(\014H\000\022\023\n\tascii_val\030\014 \001("
      "\tH\000B\007\n\005value\"\'\n\004Path\022\017\n\007element\030\001 \003(\t\022\016\n"
      "\006origin\030\002 \001(\t\"8\n\005Value\022\r\n\005value\030\001 \001(\014\022\034\n"
      "\004type\030\002 \001(\0162\016.gnmi.Encoding:\002\030\001\"J\n\005Error"
      "\022\014\n\004code\030\001 \001(\r\022\017\n\007message\030\002 \001(\t\022\"\n\004data\030"
      "\003 \001(\0132\024.google.protobuf.Any\".\n\tDecimal64"
      "\022\016\n\006digits\030\001 \001(\004\022\021\n\tprecision\030\002 \001(\r\"0\n\013S"
      "calarArray\022!\n\007element\030\001 \003(\0132\020.gnmi.Typed"
      "Value\"\212\001\n\020SubscribeRequest\022+\n\tsubscribe\030"
      "\001 \001(\0132\026.gnmi.SubscriptionListH\000\022\032\n\004poll\030"
      "\003 \001(\0132\n.gnmi.PollH\000\022\"\n\007aliases\030\004 \001(\0132\017.g"
      "nmi.AliasListH\000B\t\n\007request\"\006\n\004Poll\"|\n\021Su"
      "bscribeResponse\022$\n\006update\030\001 \001(\0132\022.gnmi.N"
      "otificationH\000\022\027\n\rsync_response\030\003 \001(\010H\000\022\034"
      "\n\005error\030\004 \001(\0132\013.gnmi.ErrorH\000B\n\n\010response"
      "\"\301\002\n\020SubscriptionList\022\032\n\006prefix\030\001 \001(\0132\n."
      "gnmi.Path\022(\n\014subscription\030\002 \003(\0132\022.gnmi.S"
      "ubscription\022\023\n\013use_aliases\030\003 \001(\010\022\035\n\003qos\030"
      "\004 \001(\0132\020.gnmi.QOSMarking\022)\n\004mode\030\005 \001(\0162\033."
      "gnmi.SubscriptionList.Mode\022\031\n\021allow_aggr"
      "egation\030\006 \001(\010\022#\n\nuse_models\030\007 \003(\0132\017.gnmi"
      ".ModelData\022 \n\010encoding\030\010 \001(\0162\016.gnmi.Enco"
      "ding\"&\n\004Mode\022\n\n\006STREAM\020\000\022\010\n\004ONCE\020\001\022\010\n\004PO"
      "LL\020\002\"\237\001\n\014Subscription\022\030\n\004path\030\001 \001(\0132\n.gn"
      "mi.Path\022$\n\004mode\030\002 \001(\0162\026.gnmi.Subscriptio"
      "nMode\022\027\n\017sample_interval\030\003 \001(\004\022\032\n\022suppre"
      "ss_redundant\030\004 \001(\010\022\032\n\022heartbeat_interval"
      "\030\005 \001(\004\"\035\n\nQOSMarking\022\017\n\007marking\030\001 \001(\r\"0\n"
      "\005Alias\022\030\n\004path\030\001 \001(\0132\n.gnmi.Path\022\r\n\005alia"
      "s\030\002 \001(\t\"\'\n\tAliasList\022\032\n\005alias\030\001 \003(\0132\013.gn"
      "mi.Alias\"\201\001\n\nSetRequest\022\032\n\006prefix\030\001 \001(\0132"
      "\n.gnmi.Path\022\032\n\006delete\030\002 \003(\0132\n.gnmi.Path\022"
      "\035\n\007replace\030\003 \003(\0132\014.gnmi.Update\022\034\n\006update"
      "\030\004 \003(\0132\014.gnmi.Update\"\204\001\n\013SetResponse\022\032\n\006"
      "prefix\030\001 \001(\0132\n.gnmi.Path\022$\n\010response\030\002 \003"
      "(\0132\022.gnmi.UpdateResult\022 \n\007message\030\003 \001(\0132"
      "\013.gnmi.ErrorB\002\030\001\022\021\n\ttimestamp\030\004 \001(\003\"\306\001\n\014"
      "UpdateResult\022\025\n\ttimestamp\030\001 \001(\003B\002\030\001\022\030\n\004p"
      "ath\030\002 \001(\0132\n.gnmi.Path\022\034\n\007message\030\003 \001(\0132\013"
      ".gnmi.Error\022(\n\002op\030\004 \001(\0162\034.gnmi.UpdateRes"
      "ult.Operation\"=\n\tOperation\022\013\n\007INVALID\020\000\022"
      "\n\n\006DELETE\020\001\022\013\n\007REPLACE\020\002\022\n\n\006UPDATE\020\003\"\357\001\n"
      "\nGetRequest\022\032\n\006prefix\030\001 \001(\0132\n.gnmi.Path\022"
      "\030\n\004path\030\002 \003(\0132\n.gnmi.Path\022\'\n\004type\030\003 \001(\0162"
      "\031.gnmi.GetRequest.DataType\022 \n\010encoding\030\005"
      " \001(\0162\016.gnmi.Encoding\022#\n\nuse_models\030\006 \003(\013"
      "2\017.gnmi.ModelData\";\n\010DataType\022\007\n\003ALL\020\000\022\n"
      "\n\006CONFIG\020\001\022\t\n\005STATE\020\002\022\017\n\013OPERATIONAL\020\003\"S"
      "\n\013GetResponse\022(\n\014notification\030\001 \003(\0132\022.gn"
      "mi.Notification\022\032\n\005error\030\002 \001(\0132\013.gnmi.Er"
      "ror\"\023\n\021CapabilityRequest\"\202\001\n\022CapabilityR"
      "esponse\022)\n\020supported_models\030\001 \003(\0132\017.gnmi"
      ".ModelData\022+\n\023supported_encodings\030\002 \003(\0162"
      "\016.gnmi.Encoding\022\024\n\014gNMI_version\030\003 \001(\t\"@\n"
      "\tModelData\022\014\n\004name\030\001 \001(\t\022\024\n\014organization"
      "\030\002 \001(\t\022\017\n\007version\030\003 \001(\t*D\n\010Encoding\022\010\n\004J"
      "SON\020\000\022\t\n\005BYTES\020\001\022\t\n\005PROTO\020\002\022\t\n\005ASCII\020\003\022\r"
      "\n\tJSON_IETF\020\004*A\n\020SubscriptionMode\022\022\n\016TAR"
      "GET_DEFINED\020\000\022\r\n\tON_CHANGE\020\001\022\n\n\006SAMPLE\020\002"
      "2\343\001\n\004gNMI\022A\n\014Capabilities\022\027.gnmi.Capabil"
      "ityRequest\032\030.gnmi.CapabilityResponse\022*\n\003"
      "Get\022\020.gnmi.GetRequest\032\021.gnmi.GetResponse"
      "\022*\n\003Set\022\020.gnmi.SetRequest\032\021.gnmi.SetResp"
      "onse\022@\n\tSubscribe\022\026.gnmi.SubscribeReques"
      "t\032\027.gnmi.SubscribeResponse(\0010\001:3\n\014gnmi_s"
      "ervice\022\034.google.protobuf.FileOptions\030\351\007 "
      "\001(\tB\010\312>\0050.3.1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gnmi.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gnmi_2eproto

const ::google::protobuf::EnumDescriptor* SubscriptionList_Mode_descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_enum_descriptors[0];
}
bool SubscriptionList_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SubscriptionList_Mode SubscriptionList::STREAM;
const SubscriptionList_Mode SubscriptionList::ONCE;
const SubscriptionList_Mode SubscriptionList::POLL;
const SubscriptionList_Mode SubscriptionList::Mode_MIN;
const SubscriptionList_Mode SubscriptionList::Mode_MAX;
const int SubscriptionList::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* UpdateResult_Operation_descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_enum_descriptors[1];
}
bool UpdateResult_Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const UpdateResult_Operation UpdateResult::INVALID;
const UpdateResult_Operation UpdateResult::DELETE;
const UpdateResult_Operation UpdateResult::REPLACE;
const UpdateResult_Operation UpdateResult::UPDATE;
const UpdateResult_Operation UpdateResult::Operation_MIN;
const UpdateResult_Operation UpdateResult::Operation_MAX;
const int UpdateResult::Operation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GetRequest_DataType_descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_enum_descriptors[2];
}
bool GetRequest_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GetRequest_DataType GetRequest::ALL;
const GetRequest_DataType GetRequest::CONFIG;
const GetRequest_DataType GetRequest::STATE;
const GetRequest_DataType GetRequest::OPERATIONAL;
const GetRequest_DataType GetRequest::DataType_MIN;
const GetRequest_DataType GetRequest::DataType_MAX;
const int GetRequest::DataType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Encoding_descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_enum_descriptors[3];
}
bool Encoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SubscriptionMode_descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_enum_descriptors[4];
}
bool SubscriptionMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notification::kTimestampFieldNumber;
const int Notification::kPrefixFieldNumber;
const int Notification::kAliasFieldNumber;
const int Notification::kUpdateFieldNumber;
const int Notification::kDeleteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notification::Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Notification)
}
Notification::Notification(const Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      update_(from.update_),
      delete__(from.delete__),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alias().size() > 0) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:gnmi.Notification)
}

void Notification::SharedCtor() {
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&prefix_, 0, reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&prefix_) + sizeof(timestamp_));
  _cached_size_ = 0;
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:gnmi.Notification)
  SharedDtor();
}

void Notification::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete prefix_;
  }
}

void Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notification::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Notification& Notification::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Notification* Notification::New(::google::protobuf::Arena* arena) const {
  Notification* n = new Notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Notification)
  update_.Clear();
  delete__.Clear();
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  timestamp_ = GOOGLE_LONGLONG(0);
}

bool Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Path prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alias = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), this->alias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Notification.alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Update update = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Path delete = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_delete_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Notification)
  return false;
#undef DO_
}

void Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // .gnmi.Path prefix = 2;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->prefix_, output);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Notification.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->alias(), output);
  }

  // repeated .gnmi.Update update = 4;
  for (unsigned int i = 0, n = this->update_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->update(i), output);
  }

  // repeated .gnmi.Path delete = 5;
  for (unsigned int i = 0, n = this->delete__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->delete_(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.Notification)
}

::google::protobuf::uint8* Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // .gnmi.Path prefix = 2;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->prefix_, deterministic, target);
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Notification.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->alias(), target);
  }

  // repeated .gnmi.Update update = 4;
  for (unsigned int i = 0, n = this->update_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->update(i), deterministic, target);
  }

  // repeated .gnmi.Path delete = 5;
  for (unsigned int i = 0, n = this->delete__size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->delete_(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Notification)
  return target;
}

size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Notification)
  size_t total_size = 0;

  // repeated .gnmi.Update update = 4;
  {
    unsigned int count = this->update_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->update(i));
    }
  }

  // repeated .gnmi.Path delete = 5;
  {
    unsigned int count = this->delete__size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->delete_(i));
    }
  }

  // string alias = 3;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // .gnmi.Path prefix = 2;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prefix_);
  }

  // int64 timestamp = 1;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Notification)
    MergeFrom(*source);
  }
}

void Notification::MergeFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  update_.MergeFrom(from.update_);
  delete__.MergeFrom(from.delete__);
  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notification::IsInitialized() const {
  return true;
}

void Notification::Swap(Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notification::InternalSwap(Notification* other) {
  update_.InternalSwap(&other->update_);
  delete__.InternalSwap(&other->delete__);
  alias_.Swap(&other->alias_);
  std::swap(prefix_, other->prefix_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Notification::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Notification

// int64 timestamp = 1;
void Notification::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.timestamp)
  return timestamp_;
}
void Notification::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Notification.timestamp)
}

// .gnmi.Path prefix = 2;
bool Notification::has_prefix() const {
  return this != internal_default_instance() && prefix_ != NULL;
}
void Notification::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
const ::gnmi::Path& Notification::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.prefix)
  return prefix_ != NULL ? *prefix_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* Notification::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Notification.prefix)
  return prefix_;
}
::gnmi::Path* Notification::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.Notification.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
void Notification::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Notification.prefix)
}

// string alias = 3;
void Notification::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Notification::alias() const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.alias)
  return alias_.GetNoArena();
}
void Notification::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Notification.alias)
}
#if LANG_CXX11
void Notification::set_alias(::std::string&& value) {
  
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.Notification.alias)
}
#endif
void Notification::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Notification.alias)
}
void Notification::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Notification.alias)
}
::std::string* Notification::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Notification.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Notification::release_alias() {
  // @@protoc_insertion_point(field_release:gnmi.Notification.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Notification::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Notification.alias)
}

// repeated .gnmi.Update update = 4;
int Notification::update_size() const {
  return update_.size();
}
void Notification::clear_update() {
  update_.Clear();
}
const ::gnmi::Update& Notification::update(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.update)
  return update_.Get(index);
}
::gnmi::Update* Notification::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.Notification.update)
  return update_.Mutable(index);
}
::gnmi::Update* Notification::add_update() {
  // @@protoc_insertion_point(field_add:gnmi.Notification.update)
  return update_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
Notification::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.Notification.update)
  return &update_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
Notification::update() const {
  // @@protoc_insertion_point(field_list:gnmi.Notification.update)
  return update_;
}

// repeated .gnmi.Path delete = 5;
int Notification::delete__size() const {
  return delete__.size();
}
void Notification::clear_delete_() {
  delete__.Clear();
}
const ::gnmi::Path& Notification::delete_(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.Notification.delete)
  return delete__.Get(index);
}
::gnmi::Path* Notification::mutable_delete_(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.Notification.delete)
  return delete__.Mutable(index);
}
::gnmi::Path* Notification::add_delete_() {
  // @@protoc_insertion_point(field_add:gnmi.Notification.delete)
  return delete__.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
Notification::mutable_delete_() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.Notification.delete)
  return &delete__;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
Notification::delete_() const {
  // @@protoc_insertion_point(field_list:gnmi.Notification.delete)
  return delete__;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Update::kPathFieldNumber;
const int Update::kValueFieldNumber;
const int Update::kValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Update::Update()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Update)
}
Update::Update(const Update& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_path()) {
    path_ = new ::gnmi::Path(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_value()) {
    value_ = new ::gnmi::Value(*from.value_);
  } else {
    value_ = NULL;
  }
  if (from.has_val()) {
    val_ = new ::gnmi::TypedValue(*from.val_);
  } else {
    val_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.Update)
}

void Update::SharedCtor() {
  ::memset(&path_, 0, reinterpret_cast<char*>(&val_) -
    reinterpret_cast<char*>(&path_) + sizeof(val_));
  _cached_size_ = 0;
}

Update::~Update() {
  // @@protoc_insertion_point(destructor:gnmi.Update)
  SharedDtor();
}

void Update::SharedDtor() {
  if (this != internal_default_instance()) {
    delete path_;
  }
  if (this != internal_default_instance()) {
    delete value_;
  }
  if (this != internal_default_instance()) {
    delete val_;
  }
}

void Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Update::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Update& Update::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Update* Update::New(::google::protobuf::Arena* arena) const {
  Update* n = new Update;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Update::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Update)
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
  if (GetArenaNoVirtual() == NULL && val_ != NULL) {
    delete val_;
  }
  val_ = NULL;
}

bool Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Update)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Value value = 2 [deprecated = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.TypedValue val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Update)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Update)
  return false;
#undef DO_
}

void Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->path_, output);
  }

  // .gnmi.Value value = 2 [deprecated = true];
  if (this->has_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->value_, output);
  }

  // .gnmi.TypedValue val = 3;
  if (this->has_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->val_, output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.Update)
}

::google::protobuf::uint8* Update::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Update)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->path_, deterministic, target);
  }

  // .gnmi.Value value = 2 [deprecated = true];
  if (this->has_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->value_, deterministic, target);
  }

  // .gnmi.TypedValue val = 3;
  if (this->has_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->val_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Update)
  return target;
}

size_t Update::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Update)
  size_t total_size = 0;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->path_);
  }

  // .gnmi.Value value = 2 [deprecated = true];
  if (this->has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->value_);
  }

  // .gnmi.TypedValue val = 3;
  if (this->has_val()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->val_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Update::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Update)
  GOOGLE_DCHECK_NE(&from, this);
  const Update* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Update>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Update)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Update)
    MergeFrom(*source);
  }
}

void Update::MergeFrom(const Update& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Update)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    mutable_path()->::gnmi::Path::MergeFrom(from.path());
  }
  if (from.has_value()) {
    mutable_value()->::gnmi::Value::MergeFrom(from.value());
  }
  if (from.has_val()) {
    mutable_val()->::gnmi::TypedValue::MergeFrom(from.val());
  }
}

void Update::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Update::CopyFrom(const Update& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Update)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Update::IsInitialized() const {
  return true;
}

void Update::Swap(Update* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Update::InternalSwap(Update* other) {
  std::swap(path_, other->path_);
  std::swap(value_, other->value_);
  std::swap(val_, other->val_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Update::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Update

// .gnmi.Path path = 1;
bool Update::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
void Update::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
const ::gnmi::Path& Update::path() const {
  // @@protoc_insertion_point(field_get:gnmi.Update.path)
  return path_ != NULL ? *path_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* Update::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Update.path)
  return path_;
}
::gnmi::Path* Update::release_path() {
  // @@protoc_insertion_point(field_release:gnmi.Update.path)
  
  ::gnmi::Path* temp = path_;
  path_ = NULL;
  return temp;
}
void Update::set_allocated_path(::gnmi::Path* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Update.path)
}

// .gnmi.Value value = 2 [deprecated = true];
bool Update::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
void Update::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) delete value_;
  value_ = NULL;
}
const ::gnmi::Value& Update::value() const {
  // @@protoc_insertion_point(field_get:gnmi.Update.value)
  return value_ != NULL ? *value_
                         : *::gnmi::Value::internal_default_instance();
}
::gnmi::Value* Update::mutable_value() {
  
  if (value_ == NULL) {
    value_ = new ::gnmi::Value;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Update.value)
  return value_;
}
::gnmi::Value* Update::release_value() {
  // @@protoc_insertion_point(field_release:gnmi.Update.value)
  
  ::gnmi::Value* temp = value_;
  value_ = NULL;
  return temp;
}
void Update::set_allocated_value(::gnmi::Value* value) {
  delete value_;
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Update.value)
}

// .gnmi.TypedValue val = 3;
bool Update::has_val() const {
  return this != internal_default_instance() && val_ != NULL;
}
void Update::clear_val() {
  if (GetArenaNoVirtual() == NULL && val_ != NULL) delete val_;
  val_ = NULL;
}
const ::gnmi::TypedValue& Update::val() const {
  // @@protoc_insertion_point(field_get:gnmi.Update.val)
  return val_ != NULL ? *val_
                         : *::gnmi::TypedValue::internal_default_instance();
}
::gnmi::TypedValue* Update::mutable_val() {
  
  if (val_ == NULL) {
    val_ = new ::gnmi::TypedValue;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Update.val)
  return val_;
}
::gnmi::TypedValue* Update::release_val() {
  // @@protoc_insertion_point(field_release:gnmi.Update.val)
  
  ::gnmi::TypedValue* temp = val_;
  val_ = NULL;
  return temp;
}
void Update::set_allocated_val(::gnmi::TypedValue* val) {
  delete val_;
  val_ = val;
  if (val) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Update.val)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypedValue::kStringValFieldNumber;
const int TypedValue::kIntValFieldNumber;
const int TypedValue::kUintValFieldNumber;
const int TypedValue::kBoolValFieldNumber;
const int TypedValue::kBytesValFieldNumber;
const int TypedValue::kFloatValFieldNumber;
const int TypedValue::kDecimalValFieldNumber;
const int TypedValue::kLeaflistValFieldNumber;
const int TypedValue::kAnyValFieldNumber;
const int TypedValue::kJsonValFieldNumber;
const int TypedValue::kJsonIetfValFieldNumber;
const int TypedValue::kAsciiValFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypedValue::TypedValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.TypedValue)
}
TypedValue::TypedValue(const TypedValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kStringVal: {
      set_string_val(from.string_val());
      break;
    }
    case kIntVal: {
      set_int_val(from.int_val());
      break;
    }
    case kUintVal: {
      set_uint_val(from.uint_val());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case kBytesVal: {
      set_bytes_val(from.bytes_val());
      break;
    }
    case kFloatVal: {
      set_float_val(from.float_val());
      break;
    }
    case kDecimalVal: {
      mutable_decimal_val()->::gnmi::Decimal64::MergeFrom(from.decimal_val());
      break;
    }
    case kLeaflistVal: {
      mutable_leaflist_val()->::gnmi::ScalarArray::MergeFrom(from.leaflist_val());
      break;
    }
    case kAnyVal: {
      mutable_any_val()->::google::protobuf::Any::MergeFrom(from.any_val());
      break;
    }
    case kJsonVal: {
      set_json_val(from.json_val());
      break;
    }
    case kJsonIetfVal: {
      set_json_ietf_val(from.json_ietf_val());
      break;
    }
    case kAsciiVal: {
      set_ascii_val(from.ascii_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.TypedValue)
}

void TypedValue::SharedCtor() {
  clear_has_value();
  _cached_size_ = 0;
}

TypedValue::~TypedValue() {
  // @@protoc_insertion_point(destructor:gnmi.TypedValue)
  SharedDtor();
}

void TypedValue::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void TypedValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypedValue::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TypedValue& TypedValue::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

TypedValue* TypedValue::New(::google::protobuf::Arena* arena) const {
  TypedValue* n = new TypedValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypedValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:gnmi.TypedValue)
  switch (value_case()) {
    case kStringVal: {
      value_.string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kIntVal: {
      // No need to clear
      break;
    }
    case kUintVal: {
      // No need to clear
      break;
    }
    case kBoolVal: {
      // No need to clear
      break;
    }
    case kBytesVal: {
      value_.bytes_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFloatVal: {
      // No need to clear
      break;
    }
    case kDecimalVal: {
      delete value_.decimal_val_;
      break;
    }
    case kLeaflistVal: {
      delete value_.leaflist_val_;
      break;
    }
    case kAnyVal: {
      delete value_.any_val_;
      break;
    }
    case kJsonVal: {
      value_.json_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kJsonIetfVal: {
      value_.json_ietf_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kAsciiVal: {
      value_.ascii_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypedValue::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.TypedValue)
  clear_value();
}

bool TypedValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.TypedValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_val = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_val().data(), this->string_val().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.TypedValue.string_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int_val = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int_val_)));
          set_has_int_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uint_val = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.uint_val_)));
          set_has_uint_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_val = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_val_)));
          set_has_bool_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytes_val = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float_val = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_.float_val_)));
          set_has_float_val();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Decimal64 decimal_val = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_decimal_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.ScalarArray leaflist_val = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_leaflist_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any any_val = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_any_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes json_val = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_json_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes json_ietf_val = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_json_ietf_val()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ascii_val = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ascii_val()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ascii_val().data(), this->ascii_val().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.TypedValue.ascii_val"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.TypedValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.TypedValue)
  return false;
#undef DO_
}

void TypedValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.TypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_val = 1;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_val().data(), this->string_val().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.TypedValue.string_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->string_val(), output);
  }

  // int64 int_val = 2;
  if (has_int_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->int_val(), output);
  }

  // uint64 uint_val = 3;
  if (has_uint_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->uint_val(), output);
  }

  // bool bool_val = 4;
  if (has_bool_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->bool_val(), output);
  }

  // bytes bytes_val = 5;
  if (has_bytes_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->bytes_val(), output);
  }

  // float float_val = 6;
  if (has_float_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->float_val(), output);
  }

  // .gnmi.Decimal64 decimal_val = 7;
  if (has_decimal_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *value_.decimal_val_, output);
  }

  // .gnmi.ScalarArray leaflist_val = 8;
  if (has_leaflist_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *value_.leaflist_val_, output);
  }

  // .google.protobuf.Any any_val = 9;
  if (has_any_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *value_.any_val_, output);
  }

  // bytes json_val = 10;
  if (has_json_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->json_val(), output);
  }

  // bytes json_ietf_val = 11;
  if (has_json_ietf_val()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->json_ietf_val(), output);
  }

  // string ascii_val = 12;
  if (has_ascii_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ascii_val().data(), this->ascii_val().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.TypedValue.ascii_val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->ascii_val(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.TypedValue)
}

::google::protobuf::uint8* TypedValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.TypedValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_val = 1;
  if (has_string_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_val().data(), this->string_val().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.TypedValue.string_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->string_val(), target);
  }

  // int64 int_val = 2;
  if (has_int_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->int_val(), target);
  }

  // uint64 uint_val = 3;
  if (has_uint_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->uint_val(), target);
  }

  // bool bool_val = 4;
  if (has_bool_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->bool_val(), target);
  }

  // bytes bytes_val = 5;
  if (has_bytes_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->bytes_val(), target);
  }

  // float float_val = 6;
  if (has_float_val()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->float_val(), target);
  }

  // .gnmi.Decimal64 decimal_val = 7;
  if (has_decimal_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *value_.decimal_val_, deterministic, target);
  }

  // .gnmi.ScalarArray leaflist_val = 8;
  if (has_leaflist_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *value_.leaflist_val_, deterministic, target);
  }

  // .google.protobuf.Any any_val = 9;
  if (has_any_val()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *value_.any_val_, deterministic, target);
  }

  // bytes json_val = 10;
  if (has_json_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->json_val(), target);
  }

  // bytes json_ietf_val = 11;
  if (has_json_ietf_val()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->json_ietf_val(), target);
  }

  // string ascii_val = 12;
  if (has_ascii_val()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ascii_val().data(), this->ascii_val().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.TypedValue.ascii_val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->ascii_val(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.TypedValue)
  return target;
}

size_t TypedValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.TypedValue)
  size_t total_size = 0;

  switch (value_case()) {
    // string string_val = 1;
    case kStringVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_val());
      break;
    }
    // int64 int_val = 2;
    case kIntVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int_val());
      break;
    }
    // uint64 uint_val = 3;
    case kUintVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uint_val());
      break;
    }
    // bool bool_val = 4;
    case kBoolVal: {
      total_size += 1 + 1;
      break;
    }
    // bytes bytes_val = 5;
    case kBytesVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_val());
      break;
    }
    // float float_val = 6;
    case kFloatVal: {
      total_size += 1 + 4;
      break;
    }
    // .gnmi.Decimal64 decimal_val = 7;
    case kDecimalVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.decimal_val_);
      break;
    }
    // .gnmi.ScalarArray leaflist_val = 8;
    case kLeaflistVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.leaflist_val_);
      break;
    }
    // .google.protobuf.Any any_val = 9;
    case kAnyVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.any_val_);
      break;
    }
    // bytes json_val = 10;
    case kJsonVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->json_val());
      break;
    }
    // bytes json_ietf_val = 11;
    case kJsonIetfVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->json_ietf_val());
      break;
    }
    // string ascii_val = 12;
    case kAsciiVal: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ascii_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypedValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.TypedValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TypedValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypedValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.TypedValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.TypedValue)
    MergeFrom(*source);
  }
}

void TypedValue::MergeFrom(const TypedValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.TypedValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kStringVal: {
      set_string_val(from.string_val());
      break;
    }
    case kIntVal: {
      set_int_val(from.int_val());
      break;
    }
    case kUintVal: {
      set_uint_val(from.uint_val());
      break;
    }
    case kBoolVal: {
      set_bool_val(from.bool_val());
      break;
    }
    case kBytesVal: {
      set_bytes_val(from.bytes_val());
      break;
    }
    case kFloatVal: {
      set_float_val(from.float_val());
      break;
    }
    case kDecimalVal: {
      mutable_decimal_val()->::gnmi::Decimal64::MergeFrom(from.decimal_val());
      break;
    }
    case kLeaflistVal: {
      mutable_leaflist_val()->::gnmi::ScalarArray::MergeFrom(from.leaflist_val());
      break;
    }
    case kAnyVal: {
      mutable_any_val()->::google::protobuf::Any::MergeFrom(from.any_val());
      break;
    }
    case kJsonVal: {
      set_json_val(from.json_val());
      break;
    }
    case kJsonIetfVal: {
      set_json_ietf_val(from.json_ietf_val());
      break;
    }
    case kAsciiVal: {
      set_ascii_val(from.ascii_val());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void TypedValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.TypedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypedValue::CopyFrom(const TypedValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.TypedValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypedValue::IsInitialized() const {
  return true;
}

void TypedValue::Swap(TypedValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypedValue::InternalSwap(TypedValue* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypedValue::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypedValue

// string string_val = 1;
bool TypedValue::has_string_val() const {
  return value_case() == kStringVal;
}
void TypedValue::set_has_string_val() {
  _oneof_case_[0] = kStringVal;
}
void TypedValue::clear_string_val() {
  if (has_string_val()) {
    value_.string_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& TypedValue::string_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.string_val)
  if (has_string_val()) {
    return value_.string_val_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TypedValue::set_string_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.string_val)
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.string_val)
}
#if LANG_CXX11
void TypedValue::set_string_val(::std::string&& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.string_val)
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_val_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.TypedValue.string_val)
}
#endif
void TypedValue::set_string_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.string_val)
}
void TypedValue::set_string_val(const char* value, size_t size) {
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.string_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.string_val)
}
::std::string* TypedValue::mutable_string_val() {
  if (!has_string_val()) {
    clear_value();
    set_has_string_val();
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.string_val)
  return value_.string_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypedValue::release_string_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.string_val)
  if (has_string_val()) {
    clear_has_value();
    return value_.string_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_string_val(::std::string* string_val) {
  if (!has_string_val()) {
    value_.string_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (string_val != NULL) {
    set_has_string_val();
    value_.string_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        string_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.string_val)
}

// int64 int_val = 2;
bool TypedValue::has_int_val() const {
  return value_case() == kIntVal;
}
void TypedValue::set_has_int_val() {
  _oneof_case_[0] = kIntVal;
}
void TypedValue::clear_int_val() {
  if (has_int_val()) {
    value_.int_val_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 TypedValue::int_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.int_val)
  if (has_int_val()) {
    return value_.int_val_;
  }
  return GOOGLE_LONGLONG(0);
}
void TypedValue::set_int_val(::google::protobuf::int64 value) {
  if (!has_int_val()) {
    clear_value();
    set_has_int_val();
  }
  value_.int_val_ = value;
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.int_val)
}

// uint64 uint_val = 3;
bool TypedValue::has_uint_val() const {
  return value_case() == kUintVal;
}
void TypedValue::set_has_uint_val() {
  _oneof_case_[0] = kUintVal;
}
void TypedValue::clear_uint_val() {
  if (has_uint_val()) {
    value_.uint_val_ = GOOGLE_ULONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::uint64 TypedValue::uint_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.uint_val)
  if (has_uint_val()) {
    return value_.uint_val_;
  }
  return GOOGLE_ULONGLONG(0);
}
void TypedValue::set_uint_val(::google::protobuf::uint64 value) {
  if (!has_uint_val()) {
    clear_value();
    set_has_uint_val();
  }
  value_.uint_val_ = value;
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.uint_val)
}

// bool bool_val = 4;
bool TypedValue::has_bool_val() const {
  return value_case() == kBoolVal;
}
void TypedValue::set_has_bool_val() {
  _oneof_case_[0] = kBoolVal;
}
void TypedValue::clear_bool_val() {
  if (has_bool_val()) {
    value_.bool_val_ = false;
    clear_has_value();
  }
}
bool TypedValue::bool_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.bool_val)
  if (has_bool_val()) {
    return value_.bool_val_;
  }
  return false;
}
void TypedValue::set_bool_val(bool value) {
  if (!has_bool_val()) {
    clear_value();
    set_has_bool_val();
  }
  value_.bool_val_ = value;
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.bool_val)
}

// bytes bytes_val = 5;
bool TypedValue::has_bytes_val() const {
  return value_case() == kBytesVal;
}
void TypedValue::set_has_bytes_val() {
  _oneof_case_[0] = kBytesVal;
}
void TypedValue::clear_bytes_val() {
  if (has_bytes_val()) {
    value_.bytes_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& TypedValue::bytes_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.bytes_val)
  if (has_bytes_val()) {
    return value_.bytes_val_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TypedValue::set_bytes_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.bytes_val)
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.bytes_val)
}
#if LANG_CXX11
void TypedValue::set_bytes_val(::std::string&& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.bytes_val)
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_val_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.TypedValue.bytes_val)
}
#endif
void TypedValue::set_bytes_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.bytes_val)
}
void TypedValue::set_bytes_val(const void* value, size_t size) {
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.bytes_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.bytes_val)
}
::std::string* TypedValue::mutable_bytes_val() {
  if (!has_bytes_val()) {
    clear_value();
    set_has_bytes_val();
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.bytes_val)
  return value_.bytes_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypedValue::release_bytes_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.bytes_val)
  if (has_bytes_val()) {
    clear_has_value();
    return value_.bytes_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_bytes_val(::std::string* bytes_val) {
  if (!has_bytes_val()) {
    value_.bytes_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (bytes_val != NULL) {
    set_has_bytes_val();
    value_.bytes_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        bytes_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.bytes_val)
}

// float float_val = 6;
bool TypedValue::has_float_val() const {
  return value_case() == kFloatVal;
}
void TypedValue::set_has_float_val() {
  _oneof_case_[0] = kFloatVal;
}
void TypedValue::clear_float_val() {
  if (has_float_val()) {
    value_.float_val_ = 0;
    clear_has_value();
  }
}
float TypedValue::float_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.float_val)
  if (has_float_val()) {
    return value_.float_val_;
  }
  return 0;
}
void TypedValue::set_float_val(float value) {
  if (!has_float_val()) {
    clear_value();
    set_has_float_val();
  }
  value_.float_val_ = value;
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.float_val)
}

// .gnmi.Decimal64 decimal_val = 7;
bool TypedValue::has_decimal_val() const {
  return value_case() == kDecimalVal;
}
void TypedValue::set_has_decimal_val() {
  _oneof_case_[0] = kDecimalVal;
}
void TypedValue::clear_decimal_val() {
  if (has_decimal_val()) {
    delete value_.decimal_val_;
    clear_has_value();
  }
}
 const ::gnmi::Decimal64& TypedValue::decimal_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.decimal_val)
  return has_decimal_val()
      ? *value_.decimal_val_
      : ::gnmi::Decimal64::default_instance();
}
::gnmi::Decimal64* TypedValue::mutable_decimal_val() {
  if (!has_decimal_val()) {
    clear_value();
    set_has_decimal_val();
    value_.decimal_val_ = new ::gnmi::Decimal64;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.decimal_val)
  return value_.decimal_val_;
}
::gnmi::Decimal64* TypedValue::release_decimal_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.decimal_val)
  if (has_decimal_val()) {
    clear_has_value();
    ::gnmi::Decimal64* temp = value_.decimal_val_;
    value_.decimal_val_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_decimal_val(::gnmi::Decimal64* decimal_val) {
  clear_value();
  if (decimal_val) {
    set_has_decimal_val();
    value_.decimal_val_ = decimal_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.decimal_val)
}

// .gnmi.ScalarArray leaflist_val = 8;
bool TypedValue::has_leaflist_val() const {
  return value_case() == kLeaflistVal;
}
void TypedValue::set_has_leaflist_val() {
  _oneof_case_[0] = kLeaflistVal;
}
void TypedValue::clear_leaflist_val() {
  if (has_leaflist_val()) {
    delete value_.leaflist_val_;
    clear_has_value();
  }
}
 const ::gnmi::ScalarArray& TypedValue::leaflist_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.leaflist_val)
  return has_leaflist_val()
      ? *value_.leaflist_val_
      : ::gnmi::ScalarArray::default_instance();
}
::gnmi::ScalarArray* TypedValue::mutable_leaflist_val() {
  if (!has_leaflist_val()) {
    clear_value();
    set_has_leaflist_val();
    value_.leaflist_val_ = new ::gnmi::ScalarArray;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.leaflist_val)
  return value_.leaflist_val_;
}
::gnmi::ScalarArray* TypedValue::release_leaflist_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.leaflist_val)
  if (has_leaflist_val()) {
    clear_has_value();
    ::gnmi::ScalarArray* temp = value_.leaflist_val_;
    value_.leaflist_val_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_leaflist_val(::gnmi::ScalarArray* leaflist_val) {
  clear_value();
  if (leaflist_val) {
    set_has_leaflist_val();
    value_.leaflist_val_ = leaflist_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.leaflist_val)
}

// .google.protobuf.Any any_val = 9;
bool TypedValue::has_any_val() const {
  return value_case() == kAnyVal;
}
void TypedValue::set_has_any_val() {
  _oneof_case_[0] = kAnyVal;
}
void TypedValue::clear_any_val() {
  if (has_any_val()) {
    delete value_.any_val_;
    clear_has_value();
  }
}
 const ::google::protobuf::Any& TypedValue::any_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.any_val)
  return has_any_val()
      ? *value_.any_val_
      : ::google::protobuf::Any::default_instance();
}
::google::protobuf::Any* TypedValue::mutable_any_val() {
  if (!has_any_val()) {
    clear_value();
    set_has_any_val();
    value_.any_val_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.any_val)
  return value_.any_val_;
}
::google::protobuf::Any* TypedValue::release_any_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.any_val)
  if (has_any_val()) {
    clear_has_value();
    ::google::protobuf::Any* temp = value_.any_val_;
    value_.any_val_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_any_val(::google::protobuf::Any* any_val) {
  clear_value();
  if (any_val) {
    set_has_any_val();
    value_.any_val_ = any_val;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.any_val)
}

// bytes json_val = 10;
bool TypedValue::has_json_val() const {
  return value_case() == kJsonVal;
}
void TypedValue::set_has_json_val() {
  _oneof_case_[0] = kJsonVal;
}
void TypedValue::clear_json_val() {
  if (has_json_val()) {
    value_.json_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& TypedValue::json_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.json_val)
  if (has_json_val()) {
    return value_.json_val_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TypedValue::set_json_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_val)
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_val)
}
#if LANG_CXX11
void TypedValue::set_json_val(::std::string&& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_val)
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_val_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.TypedValue.json_val)
}
#endif
void TypedValue::set_json_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.json_val)
}
void TypedValue::set_json_val(const void* value, size_t size) {
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.json_val)
}
::std::string* TypedValue::mutable_json_val() {
  if (!has_json_val()) {
    clear_value();
    set_has_json_val();
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.json_val)
  return value_.json_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypedValue::release_json_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.json_val)
  if (has_json_val()) {
    clear_has_value();
    return value_.json_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_json_val(::std::string* json_val) {
  if (!has_json_val()) {
    value_.json_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (json_val != NULL) {
    set_has_json_val();
    value_.json_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        json_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.json_val)
}

// bytes json_ietf_val = 11;
bool TypedValue::has_json_ietf_val() const {
  return value_case() == kJsonIetfVal;
}
void TypedValue::set_has_json_ietf_val() {
  _oneof_case_[0] = kJsonIetfVal;
}
void TypedValue::clear_json_ietf_val() {
  if (has_json_ietf_val()) {
    value_.json_ietf_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& TypedValue::json_ietf_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.json_ietf_val)
  if (has_json_ietf_val()) {
    return value_.json_ietf_val_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TypedValue::set_json_ietf_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_ietf_val)
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_ietf_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_ietf_val)
}
#if LANG_CXX11
void TypedValue::set_json_ietf_val(::std::string&& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.json_ietf_val)
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_ietf_val_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.TypedValue.json_ietf_val)
}
#endif
void TypedValue::set_json_ietf_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_ietf_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.json_ietf_val)
}
void TypedValue::set_json_ietf_val(const void* value, size_t size) {
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.json_ietf_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.json_ietf_val)
}
::std::string* TypedValue::mutable_json_ietf_val() {
  if (!has_json_ietf_val()) {
    clear_value();
    set_has_json_ietf_val();
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.json_ietf_val)
  return value_.json_ietf_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypedValue::release_json_ietf_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.json_ietf_val)
  if (has_json_ietf_val()) {
    clear_has_value();
    return value_.json_ietf_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_json_ietf_val(::std::string* json_ietf_val) {
  if (!has_json_ietf_val()) {
    value_.json_ietf_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (json_ietf_val != NULL) {
    set_has_json_ietf_val();
    value_.json_ietf_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        json_ietf_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.json_ietf_val)
}

// string ascii_val = 12;
bool TypedValue::has_ascii_val() const {
  return value_case() == kAsciiVal;
}
void TypedValue::set_has_ascii_val() {
  _oneof_case_[0] = kAsciiVal;
}
void TypedValue::clear_ascii_val() {
  if (has_ascii_val()) {
    value_.ascii_val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& TypedValue::ascii_val() const {
  // @@protoc_insertion_point(field_get:gnmi.TypedValue.ascii_val)
  if (has_ascii_val()) {
    return value_.ascii_val_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TypedValue::set_ascii_val(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.ascii_val)
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.ascii_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.ascii_val)
}
#if LANG_CXX11
void TypedValue::set_ascii_val(::std::string&& value) {
  // @@protoc_insertion_point(field_set:gnmi.TypedValue.ascii_val)
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.ascii_val_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.TypedValue.ascii_val)
}
#endif
void TypedValue::set_ascii_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.ascii_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.TypedValue.ascii_val)
}
void TypedValue::set_ascii_val(const char* value, size_t size) {
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.ascii_val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.TypedValue.ascii_val)
}
::std::string* TypedValue::mutable_ascii_val() {
  if (!has_ascii_val()) {
    clear_value();
    set_has_ascii_val();
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:gnmi.TypedValue.ascii_val)
  return value_.ascii_val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypedValue::release_ascii_val() {
  // @@protoc_insertion_point(field_release:gnmi.TypedValue.ascii_val)
  if (has_ascii_val()) {
    clear_has_value();
    return value_.ascii_val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TypedValue::set_allocated_ascii_val(::std::string* ascii_val) {
  if (!has_ascii_val()) {
    value_.ascii_val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (ascii_val != NULL) {
    set_has_ascii_val();
    value_.ascii_val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        ascii_val);
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.TypedValue.ascii_val)
}

bool TypedValue::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void TypedValue::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
TypedValue::ValueCase TypedValue::value_case() const {
  return TypedValue::ValueCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path::kElementFieldNumber;
const int Path::kOriginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path::Path()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Path)
}
Path::Path(const Path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.origin().size() > 0) {
    origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.Path)
}

void Path::SharedCtor() {
  origin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:gnmi.Path)
  SharedDtor();
}

void Path::SharedDtor() {
  origin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Path::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Path::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Path& Path::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Path* Path::New(::google::protobuf::Arena* arena) const {
  Path* n = new Path;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Path)
  element_.Clear();
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Path)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_element()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->element(this->element_size() - 1).data(),
            this->element(this->element_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Path.element"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string origin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_origin()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->origin().data(), this->origin().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Path.origin"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Path)
  return false;
#undef DO_
}

void Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string element = 1;
  for (int i = 0, n = this->element_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element(i).data(), this->element(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.element");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->element(i), output);
  }

  // string origin = 2;
  if (this->origin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin().data(), this->origin().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.origin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->origin(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.Path)
}

::google::protobuf::uint8* Path::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string element = 1;
  for (int i = 0, n = this->element_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->element(i).data(), this->element(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.element");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->element(i), target);
  }

  // string origin = 2;
  if (this->origin().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->origin().data(), this->origin().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Path.origin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->origin(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Path)
  return target;
}

size_t Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Path)
  size_t total_size = 0;

  // repeated string element = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->element_size());
  for (int i = 0, n = this->element_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->element(i));
  }

  // string origin = 2;
  if (this->origin().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->origin());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Path)
  GOOGLE_DCHECK_NE(&from, this);
  const Path* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Path)
    MergeFrom(*source);
  }
}

void Path::MergeFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
  if (from.origin().size() > 0) {

    origin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.origin_);
  }
}

void Path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  return true;
}

void Path::Swap(Path* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path::InternalSwap(Path* other) {
  element_.InternalSwap(&other->element_);
  origin_.Swap(&other->origin_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Path::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Path

// repeated string element = 1;
int Path::element_size() const {
  return element_.size();
}
void Path::clear_element() {
  element_.Clear();
}
const ::std::string& Path::element(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.Path.element)
  return element_.Get(index);
}
::std::string* Path::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.Path.element)
  return element_.Mutable(index);
}
void Path::set_element(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:gnmi.Path.element)
  element_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void Path::set_element(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:gnmi.Path.element)
  element_.Mutable(index)->assign(std::move(value));
}
#endif
void Path::set_element(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  element_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:gnmi.Path.element)
}
void Path::set_element(int index, const char* value, size_t size) {
  element_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:gnmi.Path.element)
}
::std::string* Path::add_element() {
  // @@protoc_insertion_point(field_add_mutable:gnmi.Path.element)
  return element_.Add();
}
void Path::add_element(const ::std::string& value) {
  element_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:gnmi.Path.element)
}
#if LANG_CXX11
void Path::add_element(::std::string&& value) {
  element_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:gnmi.Path.element)
}
#endif
void Path::add_element(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  element_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:gnmi.Path.element)
}
void Path::add_element(const char* value, size_t size) {
  element_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:gnmi.Path.element)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
Path::element() const {
  // @@protoc_insertion_point(field_list:gnmi.Path.element)
  return element_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
Path::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.Path.element)
  return &element_;
}

// string origin = 2;
void Path::clear_origin() {
  origin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Path::origin() const {
  // @@protoc_insertion_point(field_get:gnmi.Path.origin)
  return origin_.GetNoArena();
}
void Path::set_origin(const ::std::string& value) {
  
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Path.origin)
}
#if LANG_CXX11
void Path::set_origin(::std::string&& value) {
  
  origin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.Path.origin)
}
#endif
void Path::set_origin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Path.origin)
}
void Path::set_origin(const char* value, size_t size) {
  
  origin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Path.origin)
}
::std::string* Path::mutable_origin() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Path.origin)
  return origin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Path::release_origin() {
  // @@protoc_insertion_point(field_release:gnmi.Path.origin)
  
  return origin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Path::set_allocated_origin(::std::string* origin) {
  if (origin != NULL) {
    
  } else {
    
  }
  origin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), origin);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Path.origin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Value::kValueFieldNumber;
const int Value::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Value::Value()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Value)
}
Value::Value(const Value& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:gnmi.Value)
}

void Value::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  _cached_size_ = 0;
}

Value::~Value() {
  // @@protoc_insertion_point(destructor:gnmi.Value)
  SharedDtor();
}

void Value::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Value::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Value::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Value& Value::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Value* Value::New(::google::protobuf::Arena* arena) const {
  Value* n = new Value;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Value::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Value)
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

bool Value::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Value)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Encoding type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::gnmi::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Value)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Value)
  return false;
#undef DO_
}

void Value::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->value(), output);
  }

  // .gnmi.Encoding type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.Value)
}

::google::protobuf::uint8* Value::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Value)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->value(), target);
  }

  // .gnmi.Encoding type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Value)
  return target;
}

size_t Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Value)
  size_t total_size = 0;

  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // .gnmi.Encoding type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Value::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Value* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Value>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Value)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Value)
    MergeFrom(*source);
  }
}

void Value::MergeFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Value::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Value::CopyFrom(const Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Value::IsInitialized() const {
  return true;
}

void Value::Swap(Value* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Value::InternalSwap(Value* other) {
  value_.Swap(&other->value_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Value::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Value

// bytes value = 1;
void Value::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Value::value() const {
  // @@protoc_insertion_point(field_get:gnmi.Value.value)
  return value_.GetNoArena();
}
void Value::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Value.value)
}
#if LANG_CXX11
void Value::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.Value.value)
}
#endif
void Value::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Value.value)
}
void Value::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Value.value)
}
::std::string* Value::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Value.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Value::release_value() {
  // @@protoc_insertion_point(field_release:gnmi.Value.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Value::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Value.value)
}

// .gnmi.Encoding type = 2;
void Value::clear_type() {
  type_ = 0;
}
::gnmi::Encoding Value::type() const {
  // @@protoc_insertion_point(field_get:gnmi.Value.type)
  return static_cast< ::gnmi::Encoding >(type_);
}
void Value::set_type(::gnmi::Encoding value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Value.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kCodeFieldNumber;
const int Error::kMessageFieldNumber;
const int Error::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_data()) {
    data_ = new ::google::protobuf::Any(*from.data_);
  } else {
    data_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:gnmi.Error)
}

void Error::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&data_) + sizeof(code_));
  _cached_size_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:gnmi.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Error)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  code_ = 0u;
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Error.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Any data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->data_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Error)
  size_t total_size = 0;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .google.protobuf.Any data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->data_);
  }

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_data()) {
    mutable_data()->::google::protobuf::Any::MergeFrom(from.data());
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  message_.Swap(&other->message_);
  std::swap(data_, other->data_);
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Error

// uint32 code = 1;
void Error::clear_code() {
  code_ = 0u;
}
::google::protobuf::uint32 Error::code() const {
  // @@protoc_insertion_point(field_get:gnmi.Error.code)
  return code_;
}
void Error::set_code(::google::protobuf::uint32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Error.code)
}

// string message = 2;
void Error::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Error::message() const {
  // @@protoc_insertion_point(field_get:gnmi.Error.message)
  return message_.GetNoArena();
}
void Error::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Error.message)
}
#if LANG_CXX11
void Error::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.Error.message)
}
#endif
void Error::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Error.message)
}
void Error::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Error.message)
}
::std::string* Error::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Error.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Error::release_message() {
  // @@protoc_insertion_point(field_release:gnmi.Error.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Error::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Error.message)
}

// .google.protobuf.Any data = 3;
bool Error::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
void Error::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) delete data_;
  data_ = NULL;
}
const ::google::protobuf::Any& Error::data() const {
  // @@protoc_insertion_point(field_get:gnmi.Error.data)
  return data_ != NULL ? *data_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* Error::mutable_data() {
  
  if (data_ == NULL) {
    data_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Error.data)
  return data_;
}
::google::protobuf::Any* Error::release_data() {
  // @@protoc_insertion_point(field_release:gnmi.Error.data)
  
  ::google::protobuf::Any* temp = data_;
  data_ = NULL;
  return temp;
}
void Error::set_allocated_data(::google::protobuf::Any* data) {
  delete data_;
  data_ = data;
  if (data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Error.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decimal64::kDigitsFieldNumber;
const int Decimal64::kPrecisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decimal64::Decimal64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Decimal64)
}
Decimal64::Decimal64(const Decimal64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&digits_, &from.digits_,
    reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&digits_) + sizeof(precision_));
  // @@protoc_insertion_point(copy_constructor:gnmi.Decimal64)
}

void Decimal64::SharedCtor() {
  ::memset(&digits_, 0, reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&digits_) + sizeof(precision_));
  _cached_size_ = 0;
}

Decimal64::~Decimal64() {
  // @@protoc_insertion_point(destructor:gnmi.Decimal64)
  SharedDtor();
}

void Decimal64::SharedDtor() {
}

void Decimal64::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Decimal64::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Decimal64& Decimal64::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Decimal64* Decimal64::New(::google::protobuf::Arena* arena) const {
  Decimal64* n = new Decimal64;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Decimal64::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Decimal64)
  ::memset(&digits_, 0, reinterpret_cast<char*>(&precision_) -
    reinterpret_cast<char*>(&digits_) + sizeof(precision_));
}

bool Decimal64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Decimal64)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 digits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &digits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 precision = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &precision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Decimal64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Decimal64)
  return false;
#undef DO_
}

void Decimal64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Decimal64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 digits = 1;
  if (this->digits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->digits(), output);
  }

  // uint32 precision = 2;
  if (this->precision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->precision(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.Decimal64)
}

::google::protobuf::uint8* Decimal64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Decimal64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 digits = 1;
  if (this->digits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->digits(), target);
  }

  // uint32 precision = 2;
  if (this->precision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->precision(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Decimal64)
  return target;
}

size_t Decimal64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Decimal64)
  size_t total_size = 0;

  // uint64 digits = 1;
  if (this->digits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->digits());
  }

  // uint32 precision = 2;
  if (this->precision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->precision());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Decimal64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Decimal64)
  GOOGLE_DCHECK_NE(&from, this);
  const Decimal64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Decimal64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Decimal64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Decimal64)
    MergeFrom(*source);
  }
}

void Decimal64::MergeFrom(const Decimal64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Decimal64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.digits() != 0) {
    set_digits(from.digits());
  }
  if (from.precision() != 0) {
    set_precision(from.precision());
  }
}

void Decimal64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Decimal64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decimal64::CopyFrom(const Decimal64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Decimal64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decimal64::IsInitialized() const {
  return true;
}

void Decimal64::Swap(Decimal64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Decimal64::InternalSwap(Decimal64* other) {
  std::swap(digits_, other->digits_);
  std::swap(precision_, other->precision_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Decimal64::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Decimal64

// uint64 digits = 1;
void Decimal64::clear_digits() {
  digits_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Decimal64::digits() const {
  // @@protoc_insertion_point(field_get:gnmi.Decimal64.digits)
  return digits_;
}
void Decimal64::set_digits(::google::protobuf::uint64 value) {
  
  digits_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Decimal64.digits)
}

// uint32 precision = 2;
void Decimal64::clear_precision() {
  precision_ = 0u;
}
::google::protobuf::uint32 Decimal64::precision() const {
  // @@protoc_insertion_point(field_get:gnmi.Decimal64.precision)
  return precision_;
}
void Decimal64::set_precision(::google::protobuf::uint32 value) {
  
  precision_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Decimal64.precision)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ScalarArray::kElementFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ScalarArray::ScalarArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.ScalarArray)
}
ScalarArray::ScalarArray(const ScalarArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      element_(from.element_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gnmi.ScalarArray)
}

void ScalarArray::SharedCtor() {
  _cached_size_ = 0;
}

ScalarArray::~ScalarArray() {
  // @@protoc_insertion_point(destructor:gnmi.ScalarArray)
  SharedDtor();
}

void ScalarArray::SharedDtor() {
}

void ScalarArray::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScalarArray::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ScalarArray& ScalarArray::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

ScalarArray* ScalarArray::New(::google::protobuf::Arena* arena) const {
  ScalarArray* n = new ScalarArray;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ScalarArray::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.ScalarArray)
  element_.Clear();
}

bool ScalarArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.ScalarArray)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gnmi.TypedValue element = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_element()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.ScalarArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.ScalarArray)
  return false;
#undef DO_
}

void ScalarArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.ScalarArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.TypedValue element = 1;
  for (unsigned int i = 0, n = this->element_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->element(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.ScalarArray)
}

::google::protobuf::uint8* ScalarArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.ScalarArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.TypedValue element = 1;
  for (unsigned int i = 0, n = this->element_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->element(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.ScalarArray)
  return target;
}

size_t ScalarArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.ScalarArray)
  size_t total_size = 0;

  // repeated .gnmi.TypedValue element = 1;
  {
    unsigned int count = this->element_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->element(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScalarArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.ScalarArray)
  GOOGLE_DCHECK_NE(&from, this);
  const ScalarArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ScalarArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.ScalarArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.ScalarArray)
    MergeFrom(*source);
  }
}

void ScalarArray::MergeFrom(const ScalarArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.ScalarArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  element_.MergeFrom(from.element_);
}

void ScalarArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.ScalarArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScalarArray::CopyFrom(const ScalarArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.ScalarArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScalarArray::IsInitialized() const {
  return true;
}

void ScalarArray::Swap(ScalarArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ScalarArray::InternalSwap(ScalarArray* other) {
  element_.InternalSwap(&other->element_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ScalarArray::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ScalarArray

// repeated .gnmi.TypedValue element = 1;
int ScalarArray::element_size() const {
  return element_.size();
}
void ScalarArray::clear_element() {
  element_.Clear();
}
const ::gnmi::TypedValue& ScalarArray::element(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.ScalarArray.element)
  return element_.Get(index);
}
::gnmi::TypedValue* ScalarArray::mutable_element(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.ScalarArray.element)
  return element_.Mutable(index);
}
::gnmi::TypedValue* ScalarArray::add_element() {
  // @@protoc_insertion_point(field_add:gnmi.ScalarArray.element)
  return element_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::TypedValue >*
ScalarArray::mutable_element() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.ScalarArray.element)
  return &element_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::TypedValue >&
ScalarArray::element() const {
  // @@protoc_insertion_point(field_list:gnmi.ScalarArray.element)
  return element_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRequest::kSubscribeFieldNumber;
const int SubscribeRequest::kPollFieldNumber;
const int SubscribeRequest::kAliasesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_request();
  switch (from.request_case()) {
    case kSubscribe: {
      mutable_subscribe()->::gnmi::SubscriptionList::MergeFrom(from.subscribe());
      break;
    }
    case kPoll: {
      mutable_poll()->::gnmi::Poll::MergeFrom(from.poll());
      break;
    }
    case kAliases: {
      mutable_aliases()->::gnmi::AliasList::MergeFrom(from.aliases());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  clear_has_request();
  _cached_size_ = 0;
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:gnmi.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (has_request()) {
    clear_request();
  }
}

void SubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubscribeRequest* SubscribeRequest::New(::google::protobuf::Arena* arena) const {
  SubscribeRequest* n = new SubscribeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeRequest::clear_request() {
// @@protoc_insertion_point(one_of_clear_start:gnmi.SubscribeRequest)
  switch (request_case()) {
    case kSubscribe: {
      delete request_.subscribe_;
      break;
    }
    case kPoll: {
      delete request_.poll_;
      break;
    }
    case kAliases: {
      delete request_.aliases_;
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_NOT_SET;
}


void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SubscribeRequest)
  clear_request();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SubscribeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.SubscriptionList subscribe = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subscribe()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Poll poll = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_poll()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.AliasList aliases = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_aliases()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.SubscriptionList subscribe = 1;
  if (has_subscribe()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *request_.subscribe_, output);
  }

  // .gnmi.Poll poll = 3;
  if (has_poll()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *request_.poll_, output);
  }

  // .gnmi.AliasList aliases = 4;
  if (has_aliases()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *request_.aliases_, output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.SubscriptionList subscribe = 1;
  if (has_subscribe()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *request_.subscribe_, deterministic, target);
  }

  // .gnmi.Poll poll = 3;
  if (has_poll()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *request_.poll_, deterministic, target);
  }

  // .gnmi.AliasList aliases = 4;
  if (has_aliases()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *request_.aliases_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SubscribeRequest)
  return target;
}

size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SubscribeRequest)
  size_t total_size = 0;

  switch (request_case()) {
    // .gnmi.SubscriptionList subscribe = 1;
    case kSubscribe: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *request_.subscribe_);
      break;
    }
    // .gnmi.Poll poll = 3;
    case kPoll: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *request_.poll_);
      break;
    }
    // .gnmi.AliasList aliases = 4;
    case kAliases: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *request_.aliases_);
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SubscribeRequest)
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_case()) {
    case kSubscribe: {
      mutable_subscribe()->::gnmi::SubscriptionList::MergeFrom(from.subscribe());
      break;
    }
    case kPoll: {
      mutable_poll()->::gnmi::Poll::MergeFrom(from.poll());
      break;
    }
    case kAliases: {
      mutable_aliases()->::gnmi::AliasList::MergeFrom(from.aliases());
      break;
    }
    case REQUEST_NOT_SET: {
      break;
    }
  }
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  std::swap(request_, other->request_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribeRequest

// .gnmi.SubscriptionList subscribe = 1;
bool SubscribeRequest::has_subscribe() const {
  return request_case() == kSubscribe;
}
void SubscribeRequest::set_has_subscribe() {
  _oneof_case_[0] = kSubscribe;
}
void SubscribeRequest::clear_subscribe() {
  if (has_subscribe()) {
    delete request_.subscribe_;
    clear_has_request();
  }
}
 const ::gnmi::SubscriptionList& SubscribeRequest::subscribe() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeRequest.subscribe)
  return has_subscribe()
      ? *request_.subscribe_
      : ::gnmi::SubscriptionList::default_instance();
}
::gnmi::SubscriptionList* SubscribeRequest::mutable_subscribe() {
  if (!has_subscribe()) {
    clear_request();
    set_has_subscribe();
    request_.subscribe_ = new ::gnmi::SubscriptionList;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeRequest.subscribe)
  return request_.subscribe_;
}
::gnmi::SubscriptionList* SubscribeRequest::release_subscribe() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeRequest.subscribe)
  if (has_subscribe()) {
    clear_has_request();
    ::gnmi::SubscriptionList* temp = request_.subscribe_;
    request_.subscribe_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SubscribeRequest::set_allocated_subscribe(::gnmi::SubscriptionList* subscribe) {
  clear_request();
  if (subscribe) {
    set_has_subscribe();
    request_.subscribe_ = subscribe;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.subscribe)
}

// .gnmi.Poll poll = 3;
bool SubscribeRequest::has_poll() const {
  return request_case() == kPoll;
}
void SubscribeRequest::set_has_poll() {
  _oneof_case_[0] = kPoll;
}
void SubscribeRequest::clear_poll() {
  if (has_poll()) {
    delete request_.poll_;
    clear_has_request();
  }
}
 const ::gnmi::Poll& SubscribeRequest::poll() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeRequest.poll)
  return has_poll()
      ? *request_.poll_
      : ::gnmi::Poll::default_instance();
}
::gnmi::Poll* SubscribeRequest::mutable_poll() {
  if (!has_poll()) {
    clear_request();
    set_has_poll();
    request_.poll_ = new ::gnmi::Poll;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeRequest.poll)
  return request_.poll_;
}
::gnmi::Poll* SubscribeRequest::release_poll() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeRequest.poll)
  if (has_poll()) {
    clear_has_request();
    ::gnmi::Poll* temp = request_.poll_;
    request_.poll_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SubscribeRequest::set_allocated_poll(::gnmi::Poll* poll) {
  clear_request();
  if (poll) {
    set_has_poll();
    request_.poll_ = poll;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.poll)
}

// .gnmi.AliasList aliases = 4;
bool SubscribeRequest::has_aliases() const {
  return request_case() == kAliases;
}
void SubscribeRequest::set_has_aliases() {
  _oneof_case_[0] = kAliases;
}
void SubscribeRequest::clear_aliases() {
  if (has_aliases()) {
    delete request_.aliases_;
    clear_has_request();
  }
}
 const ::gnmi::AliasList& SubscribeRequest::aliases() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeRequest.aliases)
  return has_aliases()
      ? *request_.aliases_
      : ::gnmi::AliasList::default_instance();
}
::gnmi::AliasList* SubscribeRequest::mutable_aliases() {
  if (!has_aliases()) {
    clear_request();
    set_has_aliases();
    request_.aliases_ = new ::gnmi::AliasList;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeRequest.aliases)
  return request_.aliases_;
}
::gnmi::AliasList* SubscribeRequest::release_aliases() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeRequest.aliases)
  if (has_aliases()) {
    clear_has_request();
    ::gnmi::AliasList* temp = request_.aliases_;
    request_.aliases_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SubscribeRequest::set_allocated_aliases(::gnmi::AliasList* aliases) {
  clear_request();
  if (aliases) {
    set_has_aliases();
    request_.aliases_ = aliases;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeRequest.aliases)
}

bool SubscribeRequest::has_request() const {
  return request_case() != REQUEST_NOT_SET;
}
void SubscribeRequest::clear_has_request() {
  _oneof_case_[0] = REQUEST_NOT_SET;
}
SubscribeRequest::RequestCase SubscribeRequest::request_case() const {
  return SubscribeRequest::RequestCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Poll::Poll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Poll)
}
Poll::Poll(const Poll& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gnmi.Poll)
}

void Poll::SharedCtor() {
  _cached_size_ = 0;
}

Poll::~Poll() {
  // @@protoc_insertion_point(destructor:gnmi.Poll)
  SharedDtor();
}

void Poll::SharedDtor() {
}

void Poll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Poll::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Poll& Poll::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Poll* Poll::New(::google::protobuf::Arena* arena) const {
  Poll* n = new Poll;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Poll::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Poll)
}

bool Poll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Poll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Poll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Poll)
  return false;
#undef DO_
}

void Poll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Poll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:gnmi.Poll)
}

::google::protobuf::uint8* Poll::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Poll)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Poll)
  return target;
}

size_t Poll::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Poll)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Poll::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Poll)
  GOOGLE_DCHECK_NE(&from, this);
  const Poll* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Poll>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Poll)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Poll)
    MergeFrom(*source);
  }
}

void Poll::MergeFrom(const Poll& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Poll)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Poll::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Poll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Poll::CopyFrom(const Poll& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Poll)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Poll::IsInitialized() const {
  return true;
}

void Poll::Swap(Poll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Poll::InternalSwap(Poll* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Poll::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Poll

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeResponse::kUpdateFieldNumber;
const int SubscribeResponse::kSyncResponseFieldNumber;
const int SubscribeResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeResponse::SubscribeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SubscribeResponse)
}
SubscribeResponse::SubscribeResponse(const SubscribeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_response();
  switch (from.response_case()) {
    case kUpdate: {
      mutable_update()->::gnmi::Notification::MergeFrom(from.update());
      break;
    }
    case kSyncResponse: {
      set_sync_response(from.sync_response());
      break;
    }
    case kError: {
      mutable_error()->::gnmi::Error::MergeFrom(from.error());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.SubscribeResponse)
}

void SubscribeResponse::SharedCtor() {
  clear_has_response();
  _cached_size_ = 0;
}

SubscribeResponse::~SubscribeResponse() {
  // @@protoc_insertion_point(destructor:gnmi.SubscribeResponse)
  SharedDtor();
}

void SubscribeResponse::SharedDtor() {
  if (has_response()) {
    clear_response();
  }
}

void SubscribeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeResponse::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeResponse& SubscribeResponse::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubscribeResponse* SubscribeResponse::New(::google::protobuf::Arena* arena) const {
  SubscribeResponse* n = new SubscribeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeResponse::clear_response() {
// @@protoc_insertion_point(one_of_clear_start:gnmi.SubscribeResponse)
  switch (response_case()) {
    case kUpdate: {
      delete response_.update_;
      break;
    }
    case kSyncResponse: {
      // No need to clear
      break;
    }
    case kError: {
      delete response_.error_;
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_NOT_SET;
}


void SubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SubscribeResponse)
  clear_response();
}

bool SubscribeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SubscribeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Notification update = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sync_response = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          clear_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &response_.sync_response_)));
          set_has_sync_response();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Error error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SubscribeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SubscribeResponse)
  return false;
#undef DO_
}

void SubscribeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SubscribeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Notification update = 1;
  if (has_update()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *response_.update_, output);
  }

  // bool sync_response = 3;
  if (has_sync_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->sync_response(), output);
  }

  // .gnmi.Error error = 4;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *response_.error_, output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.SubscribeResponse)
}

::google::protobuf::uint8* SubscribeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SubscribeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Notification update = 1;
  if (has_update()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *response_.update_, deterministic, target);
  }

  // bool sync_response = 3;
  if (has_sync_response()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->sync_response(), target);
  }

  // .gnmi.Error error = 4;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *response_.error_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SubscribeResponse)
  return target;
}

size_t SubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SubscribeResponse)
  size_t total_size = 0;

  switch (response_case()) {
    // .gnmi.Notification update = 1;
    case kUpdate: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *response_.update_);
      break;
    }
    // bool sync_response = 3;
    case kSyncResponse: {
      total_size += 1 + 1;
      break;
    }
    // .gnmi.Error error = 4;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *response_.error_);
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SubscribeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SubscribeResponse)
    MergeFrom(*source);
  }
}

void SubscribeResponse::MergeFrom(const SubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_case()) {
    case kUpdate: {
      mutable_update()->::gnmi::Notification::MergeFrom(from.update());
      break;
    }
    case kSyncResponse: {
      set_sync_response(from.sync_response());
      break;
    }
    case kError: {
      mutable_error()->::gnmi::Error::MergeFrom(from.error());
      break;
    }
    case RESPONSE_NOT_SET: {
      break;
    }
  }
}

void SubscribeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeResponse::CopyFrom(const SubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeResponse::IsInitialized() const {
  return true;
}

void SubscribeResponse::Swap(SubscribeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeResponse::InternalSwap(SubscribeResponse* other) {
  std::swap(response_, other->response_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribeResponse::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribeResponse

// .gnmi.Notification update = 1;
bool SubscribeResponse::has_update() const {
  return response_case() == kUpdate;
}
void SubscribeResponse::set_has_update() {
  _oneof_case_[0] = kUpdate;
}
void SubscribeResponse::clear_update() {
  if (has_update()) {
    delete response_.update_;
    clear_has_response();
  }
}
 const ::gnmi::Notification& SubscribeResponse::update() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeResponse.update)
  return has_update()
      ? *response_.update_
      : ::gnmi::Notification::default_instance();
}
::gnmi::Notification* SubscribeResponse::mutable_update() {
  if (!has_update()) {
    clear_response();
    set_has_update();
    response_.update_ = new ::gnmi::Notification;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeResponse.update)
  return response_.update_;
}
::gnmi::Notification* SubscribeResponse::release_update() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeResponse.update)
  if (has_update()) {
    clear_has_response();
    ::gnmi::Notification* temp = response_.update_;
    response_.update_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SubscribeResponse::set_allocated_update(::gnmi::Notification* update) {
  clear_response();
  if (update) {
    set_has_update();
    response_.update_ = update;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeResponse.update)
}

// bool sync_response = 3;
bool SubscribeResponse::has_sync_response() const {
  return response_case() == kSyncResponse;
}
void SubscribeResponse::set_has_sync_response() {
  _oneof_case_[0] = kSyncResponse;
}
void SubscribeResponse::clear_sync_response() {
  if (has_sync_response()) {
    response_.sync_response_ = false;
    clear_has_response();
  }
}
bool SubscribeResponse::sync_response() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeResponse.sync_response)
  if (has_sync_response()) {
    return response_.sync_response_;
  }
  return false;
}
void SubscribeResponse::set_sync_response(bool value) {
  if (!has_sync_response()) {
    clear_response();
    set_has_sync_response();
  }
  response_.sync_response_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscribeResponse.sync_response)
}

// .gnmi.Error error = 4;
bool SubscribeResponse::has_error() const {
  return response_case() == kError;
}
void SubscribeResponse::set_has_error() {
  _oneof_case_[0] = kError;
}
void SubscribeResponse::clear_error() {
  if (has_error()) {
    delete response_.error_;
    clear_has_response();
  }
}
 const ::gnmi::Error& SubscribeResponse::error() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscribeResponse.error)
  return has_error()
      ? *response_.error_
      : ::gnmi::Error::default_instance();
}
::gnmi::Error* SubscribeResponse::mutable_error() {
  if (!has_error()) {
    clear_response();
    set_has_error();
    response_.error_ = new ::gnmi::Error;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscribeResponse.error)
  return response_.error_;
}
::gnmi::Error* SubscribeResponse::release_error() {
  // @@protoc_insertion_point(field_release:gnmi.SubscribeResponse.error)
  if (has_error()) {
    clear_has_response();
    ::gnmi::Error* temp = response_.error_;
    response_.error_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void SubscribeResponse::set_allocated_error(::gnmi::Error* error) {
  clear_response();
  if (error) {
    set_has_error();
    response_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscribeResponse.error)
}

bool SubscribeResponse::has_response() const {
  return response_case() != RESPONSE_NOT_SET;
}
void SubscribeResponse::clear_has_response() {
  _oneof_case_[0] = RESPONSE_NOT_SET;
}
SubscribeResponse::ResponseCase SubscribeResponse::response_case() const {
  return SubscribeResponse::ResponseCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscriptionList::kPrefixFieldNumber;
const int SubscriptionList::kSubscriptionFieldNumber;
const int SubscriptionList::kUseAliasesFieldNumber;
const int SubscriptionList::kQosFieldNumber;
const int SubscriptionList::kModeFieldNumber;
const int SubscriptionList::kAllowAggregationFieldNumber;
const int SubscriptionList::kUseModelsFieldNumber;
const int SubscriptionList::kEncodingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscriptionList::SubscriptionList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SubscriptionList)
}
SubscriptionList::SubscriptionList(const SubscriptionList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subscription_(from.subscription_),
      use_models_(from.use_models_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  if (from.has_qos()) {
    qos_ = new ::gnmi::QOSMarking(*from.qos_);
  } else {
    qos_ = NULL;
  }
  ::memcpy(&use_aliases_, &from.use_aliases_,
    reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&use_aliases_) + sizeof(encoding_));
  // @@protoc_insertion_point(copy_constructor:gnmi.SubscriptionList)
}

void SubscriptionList::SharedCtor() {
  ::memset(&prefix_, 0, reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&prefix_) + sizeof(encoding_));
  _cached_size_ = 0;
}

SubscriptionList::~SubscriptionList() {
  // @@protoc_insertion_point(destructor:gnmi.SubscriptionList)
  SharedDtor();
}

void SubscriptionList::SharedDtor() {
  if (this != internal_default_instance()) {
    delete prefix_;
  }
  if (this != internal_default_instance()) {
    delete qos_;
  }
}

void SubscriptionList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscriptionList::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscriptionList& SubscriptionList::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SubscriptionList* SubscriptionList::New(::google::protobuf::Arena* arena) const {
  SubscriptionList* n = new SubscriptionList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscriptionList::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SubscriptionList)
  subscription_.Clear();
  use_models_.Clear();
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  if (GetArenaNoVirtual() == NULL && qos_ != NULL) {
    delete qos_;
  }
  qos_ = NULL;
  ::memset(&use_aliases_, 0, reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&use_aliases_) + sizeof(encoding_));
}

bool SubscriptionList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SubscriptionList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Subscription subscription = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subscription()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool use_aliases = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_aliases_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.QOSMarking qos = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_qos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.SubscriptionList.Mode mode = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::gnmi::SubscriptionList_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allow_aggregation = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_aggregation_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.ModelData use_models = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_use_models()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Encoding encoding = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::gnmi::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SubscriptionList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SubscriptionList)
  return false;
#undef DO_
}

void SubscriptionList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SubscriptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->prefix_, output);
  }

  // repeated .gnmi.Subscription subscription = 2;
  for (unsigned int i = 0, n = this->subscription_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->subscription(i), output);
  }

  // bool use_aliases = 3;
  if (this->use_aliases() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->use_aliases(), output);
  }

  // .gnmi.QOSMarking qos = 4;
  if (this->has_qos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->qos_, output);
  }

  // .gnmi.SubscriptionList.Mode mode = 5;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->mode(), output);
  }

  // bool allow_aggregation = 6;
  if (this->allow_aggregation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->allow_aggregation(), output);
  }

  // repeated .gnmi.ModelData use_models = 7;
  for (unsigned int i = 0, n = this->use_models_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->use_models(i), output);
  }

  // .gnmi.Encoding encoding = 8;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->encoding(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.SubscriptionList)
}

::google::protobuf::uint8* SubscriptionList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SubscriptionList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->prefix_, deterministic, target);
  }

  // repeated .gnmi.Subscription subscription = 2;
  for (unsigned int i = 0, n = this->subscription_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->subscription(i), deterministic, target);
  }

  // bool use_aliases = 3;
  if (this->use_aliases() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->use_aliases(), target);
  }

  // .gnmi.QOSMarking qos = 4;
  if (this->has_qos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->qos_, deterministic, target);
  }

  // .gnmi.SubscriptionList.Mode mode = 5;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->mode(), target);
  }

  // bool allow_aggregation = 6;
  if (this->allow_aggregation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->allow_aggregation(), target);
  }

  // repeated .gnmi.ModelData use_models = 7;
  for (unsigned int i = 0, n = this->use_models_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->use_models(i), deterministic, target);
  }

  // .gnmi.Encoding encoding = 8;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->encoding(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SubscriptionList)
  return target;
}

size_t SubscriptionList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SubscriptionList)
  size_t total_size = 0;

  // repeated .gnmi.Subscription subscription = 2;
  {
    unsigned int count = this->subscription_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscription(i));
    }
  }

  // repeated .gnmi.ModelData use_models = 7;
  {
    unsigned int count = this->use_models_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->use_models(i));
    }
  }

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prefix_);
  }

  // .gnmi.QOSMarking qos = 4;
  if (this->has_qos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->qos_);
  }

  // bool use_aliases = 3;
  if (this->use_aliases() != 0) {
    total_size += 1 + 1;
  }

  // bool allow_aggregation = 6;
  if (this->allow_aggregation() != 0) {
    total_size += 1 + 1;
  }

  // .gnmi.SubscriptionList.Mode mode = 5;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // .gnmi.Encoding encoding = 8;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscriptionList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SubscriptionList)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscriptionList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscriptionList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SubscriptionList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SubscriptionList)
    MergeFrom(*source);
  }
}

void SubscriptionList::MergeFrom(const SubscriptionList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SubscriptionList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscription_.MergeFrom(from.subscription_);
  use_models_.MergeFrom(from.use_models_);
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
  if (from.has_qos()) {
    mutable_qos()->::gnmi::QOSMarking::MergeFrom(from.qos());
  }
  if (from.use_aliases() != 0) {
    set_use_aliases(from.use_aliases());
  }
  if (from.allow_aggregation() != 0) {
    set_allow_aggregation(from.allow_aggregation());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
}

void SubscriptionList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SubscriptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscriptionList::CopyFrom(const SubscriptionList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SubscriptionList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscriptionList::IsInitialized() const {
  return true;
}

void SubscriptionList::Swap(SubscriptionList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscriptionList::InternalSwap(SubscriptionList* other) {
  subscription_.InternalSwap(&other->subscription_);
  use_models_.InternalSwap(&other->use_models_);
  std::swap(prefix_, other->prefix_);
  std::swap(qos_, other->qos_);
  std::swap(use_aliases_, other->use_aliases_);
  std::swap(allow_aggregation_, other->allow_aggregation_);
  std::swap(mode_, other->mode_);
  std::swap(encoding_, other->encoding_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscriptionList::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscriptionList

// .gnmi.Path prefix = 1;
bool SubscriptionList::has_prefix() const {
  return this != internal_default_instance() && prefix_ != NULL;
}
void SubscriptionList::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
const ::gnmi::Path& SubscriptionList::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.prefix)
  return prefix_ != NULL ? *prefix_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* SubscriptionList::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscriptionList.prefix)
  return prefix_;
}
::gnmi::Path* SubscriptionList::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.SubscriptionList.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
void SubscriptionList::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscriptionList.prefix)
}

// repeated .gnmi.Subscription subscription = 2;
int SubscriptionList::subscription_size() const {
  return subscription_.size();
}
void SubscriptionList::clear_subscription() {
  subscription_.Clear();
}
const ::gnmi::Subscription& SubscriptionList::subscription(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.subscription)
  return subscription_.Get(index);
}
::gnmi::Subscription* SubscriptionList::mutable_subscription(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SubscriptionList.subscription)
  return subscription_.Mutable(index);
}
::gnmi::Subscription* SubscriptionList::add_subscription() {
  // @@protoc_insertion_point(field_add:gnmi.SubscriptionList.subscription)
  return subscription_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Subscription >*
SubscriptionList::mutable_subscription() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SubscriptionList.subscription)
  return &subscription_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Subscription >&
SubscriptionList::subscription() const {
  // @@protoc_insertion_point(field_list:gnmi.SubscriptionList.subscription)
  return subscription_;
}

// bool use_aliases = 3;
void SubscriptionList::clear_use_aliases() {
  use_aliases_ = false;
}
bool SubscriptionList::use_aliases() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.use_aliases)
  return use_aliases_;
}
void SubscriptionList::set_use_aliases(bool value) {
  
  use_aliases_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.use_aliases)
}

// .gnmi.QOSMarking qos = 4;
bool SubscriptionList::has_qos() const {
  return this != internal_default_instance() && qos_ != NULL;
}
void SubscriptionList::clear_qos() {
  if (GetArenaNoVirtual() == NULL && qos_ != NULL) delete qos_;
  qos_ = NULL;
}
const ::gnmi::QOSMarking& SubscriptionList::qos() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.qos)
  return qos_ != NULL ? *qos_
                         : *::gnmi::QOSMarking::internal_default_instance();
}
::gnmi::QOSMarking* SubscriptionList::mutable_qos() {
  
  if (qos_ == NULL) {
    qos_ = new ::gnmi::QOSMarking;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SubscriptionList.qos)
  return qos_;
}
::gnmi::QOSMarking* SubscriptionList::release_qos() {
  // @@protoc_insertion_point(field_release:gnmi.SubscriptionList.qos)
  
  ::gnmi::QOSMarking* temp = qos_;
  qos_ = NULL;
  return temp;
}
void SubscriptionList::set_allocated_qos(::gnmi::QOSMarking* qos) {
  delete qos_;
  qos_ = qos;
  if (qos) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SubscriptionList.qos)
}

// .gnmi.SubscriptionList.Mode mode = 5;
void SubscriptionList::clear_mode() {
  mode_ = 0;
}
::gnmi::SubscriptionList_Mode SubscriptionList::mode() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.mode)
  return static_cast< ::gnmi::SubscriptionList_Mode >(mode_);
}
void SubscriptionList::set_mode(::gnmi::SubscriptionList_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.mode)
}

// bool allow_aggregation = 6;
void SubscriptionList::clear_allow_aggregation() {
  allow_aggregation_ = false;
}
bool SubscriptionList::allow_aggregation() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.allow_aggregation)
  return allow_aggregation_;
}
void SubscriptionList::set_allow_aggregation(bool value) {
  
  allow_aggregation_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.allow_aggregation)
}

// repeated .gnmi.ModelData use_models = 7;
int SubscriptionList::use_models_size() const {
  return use_models_.size();
}
void SubscriptionList::clear_use_models() {
  use_models_.Clear();
}
const ::gnmi::ModelData& SubscriptionList::use_models(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.use_models)
  return use_models_.Get(index);
}
::gnmi::ModelData* SubscriptionList::mutable_use_models(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SubscriptionList.use_models)
  return use_models_.Mutable(index);
}
::gnmi::ModelData* SubscriptionList::add_use_models() {
  // @@protoc_insertion_point(field_add:gnmi.SubscriptionList.use_models)
  return use_models_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
SubscriptionList::mutable_use_models() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SubscriptionList.use_models)
  return &use_models_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
SubscriptionList::use_models() const {
  // @@protoc_insertion_point(field_list:gnmi.SubscriptionList.use_models)
  return use_models_;
}

// .gnmi.Encoding encoding = 8;
void SubscriptionList::clear_encoding() {
  encoding_ = 0;
}
::gnmi::Encoding SubscriptionList::encoding() const {
  // @@protoc_insertion_point(field_get:gnmi.SubscriptionList.encoding)
  return static_cast< ::gnmi::Encoding >(encoding_);
}
void SubscriptionList::set_encoding(::gnmi::Encoding value) {
  
  encoding_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SubscriptionList.encoding)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Subscription::kPathFieldNumber;
const int Subscription::kModeFieldNumber;
const int Subscription::kSampleIntervalFieldNumber;
const int Subscription::kSuppressRedundantFieldNumber;
const int Subscription::kHeartbeatIntervalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Subscription::Subscription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Subscription)
}
Subscription::Subscription(const Subscription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_path()) {
    path_ = new ::gnmi::Path(*from.path_);
  } else {
    path_ = NULL;
  }
  ::memcpy(&sample_interval_, &from.sample_interval_,
    reinterpret_cast<char*>(&heartbeat_interval_) -
    reinterpret_cast<char*>(&sample_interval_) + sizeof(heartbeat_interval_));
  // @@protoc_insertion_point(copy_constructor:gnmi.Subscription)
}

void Subscription::SharedCtor() {
  ::memset(&path_, 0, reinterpret_cast<char*>(&heartbeat_interval_) -
    reinterpret_cast<char*>(&path_) + sizeof(heartbeat_interval_));
  _cached_size_ = 0;
}

Subscription::~Subscription() {
  // @@protoc_insertion_point(destructor:gnmi.Subscription)
  SharedDtor();
}

void Subscription::SharedDtor() {
  if (this != internal_default_instance()) {
    delete path_;
  }
}

void Subscription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Subscription::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Subscription& Subscription::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Subscription* Subscription::New(::google::protobuf::Arena* arena) const {
  Subscription* n = new Subscription;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Subscription::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Subscription)
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  ::memset(&sample_interval_, 0, reinterpret_cast<char*>(&heartbeat_interval_) -
    reinterpret_cast<char*>(&sample_interval_) + sizeof(heartbeat_interval_));
}

bool Subscription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Subscription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.SubscriptionMode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::gnmi::SubscriptionMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sample_interval = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sample_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool suppress_redundant = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &suppress_redundant_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 heartbeat_interval = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &heartbeat_interval_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Subscription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Subscription)
  return false;
#undef DO_
}

void Subscription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Subscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->path_, output);
  }

  // .gnmi.SubscriptionMode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // uint64 sample_interval = 3;
  if (this->sample_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sample_interval(), output);
  }

  // bool suppress_redundant = 4;
  if (this->suppress_redundant() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->suppress_redundant(), output);
  }

  // uint64 heartbeat_interval = 5;
  if (this->heartbeat_interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->heartbeat_interval(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.Subscription)
}

::google::protobuf::uint8* Subscription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Subscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->path_, deterministic, target);
  }

  // .gnmi.SubscriptionMode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // uint64 sample_interval = 3;
  if (this->sample_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sample_interval(), target);
  }

  // bool suppress_redundant = 4;
  if (this->suppress_redundant() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->suppress_redundant(), target);
  }

  // uint64 heartbeat_interval = 5;
  if (this->heartbeat_interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->heartbeat_interval(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Subscription)
  return target;
}

size_t Subscription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Subscription)
  size_t total_size = 0;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->path_);
  }

  // uint64 sample_interval = 3;
  if (this->sample_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sample_interval());
  }

  // .gnmi.SubscriptionMode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // bool suppress_redundant = 4;
  if (this->suppress_redundant() != 0) {
    total_size += 1 + 1;
  }

  // uint64 heartbeat_interval = 5;
  if (this->heartbeat_interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->heartbeat_interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Subscription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Subscription)
  GOOGLE_DCHECK_NE(&from, this);
  const Subscription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Subscription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Subscription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Subscription)
    MergeFrom(*source);
  }
}

void Subscription::MergeFrom(const Subscription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Subscription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    mutable_path()->::gnmi::Path::MergeFrom(from.path());
  }
  if (from.sample_interval() != 0) {
    set_sample_interval(from.sample_interval());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.suppress_redundant() != 0) {
    set_suppress_redundant(from.suppress_redundant());
  }
  if (from.heartbeat_interval() != 0) {
    set_heartbeat_interval(from.heartbeat_interval());
  }
}

void Subscription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Subscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Subscription::CopyFrom(const Subscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Subscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Subscription::IsInitialized() const {
  return true;
}

void Subscription::Swap(Subscription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Subscription::InternalSwap(Subscription* other) {
  std::swap(path_, other->path_);
  std::swap(sample_interval_, other->sample_interval_);
  std::swap(mode_, other->mode_);
  std::swap(suppress_redundant_, other->suppress_redundant_);
  std::swap(heartbeat_interval_, other->heartbeat_interval_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Subscription::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Subscription

// .gnmi.Path path = 1;
bool Subscription::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
void Subscription::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
const ::gnmi::Path& Subscription::path() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.path)
  return path_ != NULL ? *path_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* Subscription::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Subscription.path)
  return path_;
}
::gnmi::Path* Subscription::release_path() {
  // @@protoc_insertion_point(field_release:gnmi.Subscription.path)
  
  ::gnmi::Path* temp = path_;
  path_ = NULL;
  return temp;
}
void Subscription::set_allocated_path(::gnmi::Path* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Subscription.path)
}

// .gnmi.SubscriptionMode mode = 2;
void Subscription::clear_mode() {
  mode_ = 0;
}
::gnmi::SubscriptionMode Subscription::mode() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.mode)
  return static_cast< ::gnmi::SubscriptionMode >(mode_);
}
void Subscription::set_mode(::gnmi::SubscriptionMode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Subscription.mode)
}

// uint64 sample_interval = 3;
void Subscription::clear_sample_interval() {
  sample_interval_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Subscription::sample_interval() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.sample_interval)
  return sample_interval_;
}
void Subscription::set_sample_interval(::google::protobuf::uint64 value) {
  
  sample_interval_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Subscription.sample_interval)
}

// bool suppress_redundant = 4;
void Subscription::clear_suppress_redundant() {
  suppress_redundant_ = false;
}
bool Subscription::suppress_redundant() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.suppress_redundant)
  return suppress_redundant_;
}
void Subscription::set_suppress_redundant(bool value) {
  
  suppress_redundant_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Subscription.suppress_redundant)
}

// uint64 heartbeat_interval = 5;
void Subscription::clear_heartbeat_interval() {
  heartbeat_interval_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Subscription::heartbeat_interval() const {
  // @@protoc_insertion_point(field_get:gnmi.Subscription.heartbeat_interval)
  return heartbeat_interval_;
}
void Subscription::set_heartbeat_interval(::google::protobuf::uint64 value) {
  
  heartbeat_interval_ = value;
  // @@protoc_insertion_point(field_set:gnmi.Subscription.heartbeat_interval)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QOSMarking::kMarkingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QOSMarking::QOSMarking()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.QOSMarking)
}
QOSMarking::QOSMarking(const QOSMarking& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  marking_ = from.marking_;
  // @@protoc_insertion_point(copy_constructor:gnmi.QOSMarking)
}

void QOSMarking::SharedCtor() {
  marking_ = 0u;
  _cached_size_ = 0;
}

QOSMarking::~QOSMarking() {
  // @@protoc_insertion_point(destructor:gnmi.QOSMarking)
  SharedDtor();
}

void QOSMarking::SharedDtor() {
}

void QOSMarking::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QOSMarking::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QOSMarking& QOSMarking::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

QOSMarking* QOSMarking::New(::google::protobuf::Arena* arena) const {
  QOSMarking* n = new QOSMarking;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QOSMarking::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.QOSMarking)
  marking_ = 0u;
}

bool QOSMarking::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.QOSMarking)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 marking = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &marking_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.QOSMarking)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.QOSMarking)
  return false;
#undef DO_
}

void QOSMarking::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.QOSMarking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 marking = 1;
  if (this->marking() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->marking(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.QOSMarking)
}

::google::protobuf::uint8* QOSMarking::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.QOSMarking)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 marking = 1;
  if (this->marking() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->marking(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.QOSMarking)
  return target;
}

size_t QOSMarking::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.QOSMarking)
  size_t total_size = 0;

  // uint32 marking = 1;
  if (this->marking() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->marking());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QOSMarking::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.QOSMarking)
  GOOGLE_DCHECK_NE(&from, this);
  const QOSMarking* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QOSMarking>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.QOSMarking)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.QOSMarking)
    MergeFrom(*source);
  }
}

void QOSMarking::MergeFrom(const QOSMarking& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.QOSMarking)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.marking() != 0) {
    set_marking(from.marking());
  }
}

void QOSMarking::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.QOSMarking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QOSMarking::CopyFrom(const QOSMarking& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.QOSMarking)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QOSMarking::IsInitialized() const {
  return true;
}

void QOSMarking::Swap(QOSMarking* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QOSMarking::InternalSwap(QOSMarking* other) {
  std::swap(marking_, other->marking_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QOSMarking::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QOSMarking

// uint32 marking = 1;
void QOSMarking::clear_marking() {
  marking_ = 0u;
}
::google::protobuf::uint32 QOSMarking::marking() const {
  // @@protoc_insertion_point(field_get:gnmi.QOSMarking.marking)
  return marking_;
}
void QOSMarking::set_marking(::google::protobuf::uint32 value) {
  
  marking_ = value;
  // @@protoc_insertion_point(field_set:gnmi.QOSMarking.marking)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Alias::kPathFieldNumber;
const int Alias::kAliasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Alias::Alias()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.Alias)
}
Alias::Alias(const Alias& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.alias().size() > 0) {
    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_path()) {
    path_ = new ::gnmi::Path(*from.path_);
  } else {
    path_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.Alias)
}

void Alias::SharedCtor() {
  alias_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_ = NULL;
  _cached_size_ = 0;
}

Alias::~Alias() {
  // @@protoc_insertion_point(destructor:gnmi.Alias)
  SharedDtor();
}

void Alias::SharedDtor() {
  alias_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete path_;
  }
}

void Alias::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Alias::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Alias& Alias::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

Alias* Alias::New(::google::protobuf::Arena* arena) const {
  Alias* n = new Alias;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Alias::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.Alias)
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}

bool Alias::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.Alias)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string alias = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_alias()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->alias().data(), this->alias().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.Alias.alias"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.Alias)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.Alias)
  return false;
#undef DO_
}

void Alias::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.Alias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->path_, output);
  }

  // string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Alias.alias");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->alias(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.Alias)
}

::google::protobuf::uint8* Alias::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.Alias)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->path_, deterministic, target);
  }

  // string alias = 2;
  if (this->alias().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->alias().data(), this->alias().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.Alias.alias");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->alias(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.Alias)
  return target;
}

size_t Alias::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.Alias)
  size_t total_size = 0;

  // string alias = 2;
  if (this->alias().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->alias());
  }

  // .gnmi.Path path = 1;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->path_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Alias::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.Alias)
  GOOGLE_DCHECK_NE(&from, this);
  const Alias* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Alias>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.Alias)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.Alias)
    MergeFrom(*source);
  }
}

void Alias::MergeFrom(const Alias& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.Alias)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alias().size() > 0) {

    alias_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.alias_);
  }
  if (from.has_path()) {
    mutable_path()->::gnmi::Path::MergeFrom(from.path());
  }
}

void Alias::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.Alias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Alias::CopyFrom(const Alias& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.Alias)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Alias::IsInitialized() const {
  return true;
}

void Alias::Swap(Alias* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Alias::InternalSwap(Alias* other) {
  alias_.Swap(&other->alias_);
  std::swap(path_, other->path_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Alias::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Alias

// .gnmi.Path path = 1;
bool Alias::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
void Alias::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
const ::gnmi::Path& Alias::path() const {
  // @@protoc_insertion_point(field_get:gnmi.Alias.path)
  return path_ != NULL ? *path_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* Alias::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.Alias.path)
  return path_;
}
::gnmi::Path* Alias::release_path() {
  // @@protoc_insertion_point(field_release:gnmi.Alias.path)
  
  ::gnmi::Path* temp = path_;
  path_ = NULL;
  return temp;
}
void Alias::set_allocated_path(::gnmi::Path* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.Alias.path)
}

// string alias = 2;
void Alias::clear_alias() {
  alias_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Alias::alias() const {
  // @@protoc_insertion_point(field_get:gnmi.Alias.alias)
  return alias_.GetNoArena();
}
void Alias::set_alias(const ::std::string& value) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.Alias.alias)
}
#if LANG_CXX11
void Alias::set_alias(::std::string&& value) {
  
  alias_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.Alias.alias)
}
#endif
void Alias::set_alias(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.Alias.alias)
}
void Alias::set_alias(const char* value, size_t size) {
  
  alias_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.Alias.alias)
}
::std::string* Alias::mutable_alias() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.Alias.alias)
  return alias_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Alias::release_alias() {
  // @@protoc_insertion_point(field_release:gnmi.Alias.alias)
  
  return alias_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Alias::set_allocated_alias(::std::string* alias) {
  if (alias != NULL) {
    
  } else {
    
  }
  alias_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alias);
  // @@protoc_insertion_point(field_set_allocated:gnmi.Alias.alias)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AliasList::kAliasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AliasList::AliasList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.AliasList)
}
AliasList::AliasList(const AliasList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      alias_(from.alias_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gnmi.AliasList)
}

void AliasList::SharedCtor() {
  _cached_size_ = 0;
}

AliasList::~AliasList() {
  // @@protoc_insertion_point(destructor:gnmi.AliasList)
  SharedDtor();
}

void AliasList::SharedDtor() {
}

void AliasList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AliasList::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AliasList& AliasList::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

AliasList* AliasList::New(::google::protobuf::Arena* arena) const {
  AliasList* n = new AliasList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AliasList::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.AliasList)
  alias_.Clear();
}

bool AliasList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.AliasList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gnmi.Alias alias = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_alias()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.AliasList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.AliasList)
  return false;
#undef DO_
}

void AliasList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.AliasList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.Alias alias = 1;
  for (unsigned int i = 0, n = this->alias_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->alias(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.AliasList)
}

::google::protobuf::uint8* AliasList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.AliasList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.Alias alias = 1;
  for (unsigned int i = 0, n = this->alias_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->alias(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.AliasList)
  return target;
}

size_t AliasList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.AliasList)
  size_t total_size = 0;

  // repeated .gnmi.Alias alias = 1;
  {
    unsigned int count = this->alias_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->alias(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AliasList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.AliasList)
  GOOGLE_DCHECK_NE(&from, this);
  const AliasList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AliasList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.AliasList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.AliasList)
    MergeFrom(*source);
  }
}

void AliasList::MergeFrom(const AliasList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.AliasList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  alias_.MergeFrom(from.alias_);
}

void AliasList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.AliasList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AliasList::CopyFrom(const AliasList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.AliasList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AliasList::IsInitialized() const {
  return true;
}

void AliasList::Swap(AliasList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AliasList::InternalSwap(AliasList* other) {
  alias_.InternalSwap(&other->alias_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AliasList::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AliasList

// repeated .gnmi.Alias alias = 1;
int AliasList::alias_size() const {
  return alias_.size();
}
void AliasList::clear_alias() {
  alias_.Clear();
}
const ::gnmi::Alias& AliasList::alias(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.AliasList.alias)
  return alias_.Get(index);
}
::gnmi::Alias* AliasList::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.AliasList.alias)
  return alias_.Mutable(index);
}
::gnmi::Alias* AliasList::add_alias() {
  // @@protoc_insertion_point(field_add:gnmi.AliasList.alias)
  return alias_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Alias >*
AliasList::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.AliasList.alias)
  return &alias_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Alias >&
AliasList::alias() const {
  // @@protoc_insertion_point(field_list:gnmi.AliasList.alias)
  return alias_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetRequest::kPrefixFieldNumber;
const int SetRequest::kDeleteFieldNumber;
const int SetRequest::kReplaceFieldNumber;
const int SetRequest::kUpdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetRequest::SetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SetRequest)
}
SetRequest::SetRequest(const SetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      delete__(from.delete__),
      replace_(from.replace_),
      update_(from.update_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.SetRequest)
}

void SetRequest::SharedCtor() {
  prefix_ = NULL;
  _cached_size_ = 0;
}

SetRequest::~SetRequest() {
  // @@protoc_insertion_point(destructor:gnmi.SetRequest)
  SharedDtor();
}

void SetRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete prefix_;
  }
}

void SetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetRequest::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetRequest& SetRequest::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetRequest* SetRequest::New(::google::protobuf::Arena* arena) const {
  SetRequest* n = new SetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SetRequest)
  delete__.Clear();
  replace_.Clear();
  update_.Clear();
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
}

bool SetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Path delete = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_delete_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Update replace = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_replace()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Update update = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_update()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SetRequest)
  return false;
#undef DO_
}

void SetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->prefix_, output);
  }

  // repeated .gnmi.Path delete = 2;
  for (unsigned int i = 0, n = this->delete__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->delete_(i), output);
  }

  // repeated .gnmi.Update replace = 3;
  for (unsigned int i = 0, n = this->replace_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->replace(i), output);
  }

  // repeated .gnmi.Update update = 4;
  for (unsigned int i = 0, n = this->update_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->update(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.SetRequest)
}

::google::protobuf::uint8* SetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->prefix_, deterministic, target);
  }

  // repeated .gnmi.Path delete = 2;
  for (unsigned int i = 0, n = this->delete__size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->delete_(i), deterministic, target);
  }

  // repeated .gnmi.Update replace = 3;
  for (unsigned int i = 0, n = this->replace_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->replace(i), deterministic, target);
  }

  // repeated .gnmi.Update update = 4;
  for (unsigned int i = 0, n = this->update_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->update(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SetRequest)
  return target;
}

size_t SetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SetRequest)
  size_t total_size = 0;

  // repeated .gnmi.Path delete = 2;
  {
    unsigned int count = this->delete__size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->delete_(i));
    }
  }

  // repeated .gnmi.Update replace = 3;
  {
    unsigned int count = this->replace_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->replace(i));
    }
  }

  // repeated .gnmi.Update update = 4;
  {
    unsigned int count = this->update_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->update(i));
    }
  }

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prefix_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SetRequest)
    MergeFrom(*source);
  }
}

void SetRequest::MergeFrom(const SetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  delete__.MergeFrom(from.delete__);
  replace_.MergeFrom(from.replace_);
  update_.MergeFrom(from.update_);
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
}

void SetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetRequest::CopyFrom(const SetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetRequest::IsInitialized() const {
  return true;
}

void SetRequest::Swap(SetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetRequest::InternalSwap(SetRequest* other) {
  delete__.InternalSwap(&other->delete__);
  replace_.InternalSwap(&other->replace_);
  update_.InternalSwap(&other->update_);
  std::swap(prefix_, other->prefix_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetRequest::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetRequest

// .gnmi.Path prefix = 1;
bool SetRequest::has_prefix() const {
  return this != internal_default_instance() && prefix_ != NULL;
}
void SetRequest::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
const ::gnmi::Path& SetRequest::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.SetRequest.prefix)
  return prefix_ != NULL ? *prefix_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* SetRequest::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SetRequest.prefix)
  return prefix_;
}
::gnmi::Path* SetRequest::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.SetRequest.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
void SetRequest::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SetRequest.prefix)
}

// repeated .gnmi.Path delete = 2;
int SetRequest::delete__size() const {
  return delete__.size();
}
void SetRequest::clear_delete_() {
  delete__.Clear();
}
const ::gnmi::Path& SetRequest::delete_(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SetRequest.delete)
  return delete__.Get(index);
}
::gnmi::Path* SetRequest::mutable_delete_(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SetRequest.delete)
  return delete__.Mutable(index);
}
::gnmi::Path* SetRequest::add_delete_() {
  // @@protoc_insertion_point(field_add:gnmi.SetRequest.delete)
  return delete__.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
SetRequest::mutable_delete_() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SetRequest.delete)
  return &delete__;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
SetRequest::delete_() const {
  // @@protoc_insertion_point(field_list:gnmi.SetRequest.delete)
  return delete__;
}

// repeated .gnmi.Update replace = 3;
int SetRequest::replace_size() const {
  return replace_.size();
}
void SetRequest::clear_replace() {
  replace_.Clear();
}
const ::gnmi::Update& SetRequest::replace(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SetRequest.replace)
  return replace_.Get(index);
}
::gnmi::Update* SetRequest::mutable_replace(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SetRequest.replace)
  return replace_.Mutable(index);
}
::gnmi::Update* SetRequest::add_replace() {
  // @@protoc_insertion_point(field_add:gnmi.SetRequest.replace)
  return replace_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
SetRequest::mutable_replace() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SetRequest.replace)
  return &replace_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
SetRequest::replace() const {
  // @@protoc_insertion_point(field_list:gnmi.SetRequest.replace)
  return replace_;
}

// repeated .gnmi.Update update = 4;
int SetRequest::update_size() const {
  return update_.size();
}
void SetRequest::clear_update() {
  update_.Clear();
}
const ::gnmi::Update& SetRequest::update(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SetRequest.update)
  return update_.Get(index);
}
::gnmi::Update* SetRequest::mutable_update(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SetRequest.update)
  return update_.Mutable(index);
}
::gnmi::Update* SetRequest::add_update() {
  // @@protoc_insertion_point(field_add:gnmi.SetRequest.update)
  return update_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Update >*
SetRequest::mutable_update() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SetRequest.update)
  return &update_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Update >&
SetRequest::update() const {
  // @@protoc_insertion_point(field_list:gnmi.SetRequest.update)
  return update_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetResponse::kPrefixFieldNumber;
const int SetResponse::kResponseFieldNumber;
const int SetResponse::kMessageFieldNumber;
const int SetResponse::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetResponse::SetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.SetResponse)
}
SetResponse::SetResponse(const SetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      response_(from.response_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::gnmi::Error(*from.message_);
  } else {
    message_ = NULL;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:gnmi.SetResponse)
}

void SetResponse::SharedCtor() {
  ::memset(&prefix_, 0, reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&prefix_) + sizeof(timestamp_));
  _cached_size_ = 0;
}

SetResponse::~SetResponse() {
  // @@protoc_insertion_point(destructor:gnmi.SetResponse)
  SharedDtor();
}

void SetResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete prefix_;
  }
  if (this != internal_default_instance()) {
    delete message_;
  }
}

void SetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetResponse::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SetResponse& SetResponse::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetResponse* SetResponse::New(::google::protobuf::Arena* arena) const {
  SetResponse* n = new SetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.SetResponse)
  response_.Clear();
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  timestamp_ = GOOGLE_LONGLONG(0);
}

bool SetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.SetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.UpdateResult response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Error message = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.SetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.SetResponse)
  return false;
#undef DO_
}

void SetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.SetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->prefix_, output);
  }

  // repeated .gnmi.UpdateResult response = 2;
  for (unsigned int i = 0, n = this->response_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->response(i), output);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->message_, output);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->timestamp(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.SetResponse)
}

::google::protobuf::uint8* SetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.SetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->prefix_, deterministic, target);
  }

  // repeated .gnmi.UpdateResult response = 2;
  for (unsigned int i = 0, n = this->response_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->response(i), deterministic, target);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->message_, deterministic, target);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->timestamp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.SetResponse)
  return target;
}

size_t SetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.SetResponse)
  size_t total_size = 0;

  // repeated .gnmi.UpdateResult response = 2;
  {
    unsigned int count = this->response_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->response(i));
    }
  }

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prefix_);
  }

  // .gnmi.Error message = 3 [deprecated = true];
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->message_);
  }

  // int64 timestamp = 4;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.SetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.SetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.SetResponse)
    MergeFrom(*source);
  }
}

void SetResponse::MergeFrom(const SetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.SetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  response_.MergeFrom(from.response_);
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
  if (from.has_message()) {
    mutable_message()->::gnmi::Error::MergeFrom(from.message());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void SetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.SetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetResponse::CopyFrom(const SetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.SetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetResponse::IsInitialized() const {
  return true;
}

void SetResponse::Swap(SetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetResponse::InternalSwap(SetResponse* other) {
  response_.InternalSwap(&other->response_);
  std::swap(prefix_, other->prefix_);
  std::swap(message_, other->message_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetResponse::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetResponse

// .gnmi.Path prefix = 1;
bool SetResponse::has_prefix() const {
  return this != internal_default_instance() && prefix_ != NULL;
}
void SetResponse::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
const ::gnmi::Path& SetResponse::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.SetResponse.prefix)
  return prefix_ != NULL ? *prefix_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* SetResponse::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SetResponse.prefix)
  return prefix_;
}
::gnmi::Path* SetResponse::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.SetResponse.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
void SetResponse::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SetResponse.prefix)
}

// repeated .gnmi.UpdateResult response = 2;
int SetResponse::response_size() const {
  return response_.size();
}
void SetResponse::clear_response() {
  response_.Clear();
}
const ::gnmi::UpdateResult& SetResponse::response(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.SetResponse.response)
  return response_.Get(index);
}
::gnmi::UpdateResult* SetResponse::mutable_response(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.SetResponse.response)
  return response_.Mutable(index);
}
::gnmi::UpdateResult* SetResponse::add_response() {
  // @@protoc_insertion_point(field_add:gnmi.SetResponse.response)
  return response_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::UpdateResult >*
SetResponse::mutable_response() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.SetResponse.response)
  return &response_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::UpdateResult >&
SetResponse::response() const {
  // @@protoc_insertion_point(field_list:gnmi.SetResponse.response)
  return response_;
}

// .gnmi.Error message = 3 [deprecated = true];
bool SetResponse::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
void SetResponse::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
const ::gnmi::Error& SetResponse::message() const {
  // @@protoc_insertion_point(field_get:gnmi.SetResponse.message)
  return message_ != NULL ? *message_
                         : *::gnmi::Error::internal_default_instance();
}
::gnmi::Error* SetResponse::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::gnmi::Error;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.SetResponse.message)
  return message_;
}
::gnmi::Error* SetResponse::release_message() {
  // @@protoc_insertion_point(field_release:gnmi.SetResponse.message)
  
  ::gnmi::Error* temp = message_;
  message_ = NULL;
  return temp;
}
void SetResponse::set_allocated_message(::gnmi::Error* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.SetResponse.message)
}

// int64 timestamp = 4;
void SetResponse::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 SetResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:gnmi.SetResponse.timestamp)
  return timestamp_;
}
void SetResponse::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gnmi.SetResponse.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateResult::kTimestampFieldNumber;
const int UpdateResult::kPathFieldNumber;
const int UpdateResult::kMessageFieldNumber;
const int UpdateResult::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateResult::UpdateResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.UpdateResult)
}
UpdateResult::UpdateResult(const UpdateResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_path()) {
    path_ = new ::gnmi::Path(*from.path_);
  } else {
    path_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::gnmi::Error(*from.message_);
  } else {
    message_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    reinterpret_cast<char*>(&op_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(op_));
  // @@protoc_insertion_point(copy_constructor:gnmi.UpdateResult)
}

void UpdateResult::SharedCtor() {
  ::memset(&path_, 0, reinterpret_cast<char*>(&op_) -
    reinterpret_cast<char*>(&path_) + sizeof(op_));
  _cached_size_ = 0;
}

UpdateResult::~UpdateResult() {
  // @@protoc_insertion_point(destructor:gnmi.UpdateResult)
  SharedDtor();
}

void UpdateResult::SharedDtor() {
  if (this != internal_default_instance()) {
    delete path_;
  }
  if (this != internal_default_instance()) {
    delete message_;
  }
}

void UpdateResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateResult::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateResult& UpdateResult::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateResult* UpdateResult::New(::google::protobuf::Arena* arena) const {
  UpdateResult* n = new UpdateResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateResult::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.UpdateResult)
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  ::memset(&timestamp_, 0, reinterpret_cast<char*>(&op_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(op_));
}

bool UpdateResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.UpdateResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 timestamp = 1 [deprecated = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Path path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Error message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.UpdateResult.Operation op = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_op(static_cast< ::gnmi::UpdateResult_Operation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.UpdateResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.UpdateResult)
  return false;
#undef DO_
}

void UpdateResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.UpdateResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1 [deprecated = true];
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->timestamp(), output);
  }

  // .gnmi.Path path = 2;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->path_, output);
  }

  // .gnmi.Error message = 3;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->message_, output);
  }

  // .gnmi.UpdateResult.Operation op = 4;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->op(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.UpdateResult)
}

::google::protobuf::uint8* UpdateResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.UpdateResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 timestamp = 1 [deprecated = true];
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->timestamp(), target);
  }

  // .gnmi.Path path = 2;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->path_, deterministic, target);
  }

  // .gnmi.Error message = 3;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->message_, deterministic, target);
  }

  // .gnmi.UpdateResult.Operation op = 4;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.UpdateResult)
  return target;
}

size_t UpdateResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.UpdateResult)
  size_t total_size = 0;

  // .gnmi.Path path = 2;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->path_);
  }

  // .gnmi.Error message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->message_);
  }

  // int64 timestamp = 1 [deprecated = true];
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // .gnmi.UpdateResult.Operation op = 4;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.UpdateResult)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.UpdateResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.UpdateResult)
    MergeFrom(*source);
  }
}

void UpdateResult::MergeFrom(const UpdateResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.UpdateResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    mutable_path()->::gnmi::Path::MergeFrom(from.path());
  }
  if (from.has_message()) {
    mutable_message()->::gnmi::Error::MergeFrom(from.message());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.op() != 0) {
    set_op(from.op());
  }
}

void UpdateResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.UpdateResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateResult::CopyFrom(const UpdateResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.UpdateResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateResult::IsInitialized() const {
  return true;
}

void UpdateResult::Swap(UpdateResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateResult::InternalSwap(UpdateResult* other) {
  std::swap(path_, other->path_);
  std::swap(message_, other->message_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(op_, other->op_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateResult::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateResult

// int64 timestamp = 1 [deprecated = true];
void UpdateResult::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 UpdateResult::timestamp() const {
  // @@protoc_insertion_point(field_get:gnmi.UpdateResult.timestamp)
  return timestamp_;
}
void UpdateResult::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:gnmi.UpdateResult.timestamp)
}

// .gnmi.Path path = 2;
bool UpdateResult::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
void UpdateResult::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) delete path_;
  path_ = NULL;
}
const ::gnmi::Path& UpdateResult::path() const {
  // @@protoc_insertion_point(field_get:gnmi.UpdateResult.path)
  return path_ != NULL ? *path_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* UpdateResult::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.UpdateResult.path)
  return path_;
}
::gnmi::Path* UpdateResult::release_path() {
  // @@protoc_insertion_point(field_release:gnmi.UpdateResult.path)
  
  ::gnmi::Path* temp = path_;
  path_ = NULL;
  return temp;
}
void UpdateResult::set_allocated_path(::gnmi::Path* path) {
  delete path_;
  path_ = path;
  if (path) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.UpdateResult.path)
}

// .gnmi.Error message = 3;
bool UpdateResult::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
void UpdateResult::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) delete message_;
  message_ = NULL;
}
const ::gnmi::Error& UpdateResult::message() const {
  // @@protoc_insertion_point(field_get:gnmi.UpdateResult.message)
  return message_ != NULL ? *message_
                         : *::gnmi::Error::internal_default_instance();
}
::gnmi::Error* UpdateResult::mutable_message() {
  
  if (message_ == NULL) {
    message_ = new ::gnmi::Error;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.UpdateResult.message)
  return message_;
}
::gnmi::Error* UpdateResult::release_message() {
  // @@protoc_insertion_point(field_release:gnmi.UpdateResult.message)
  
  ::gnmi::Error* temp = message_;
  message_ = NULL;
  return temp;
}
void UpdateResult::set_allocated_message(::gnmi::Error* message) {
  delete message_;
  message_ = message;
  if (message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.UpdateResult.message)
}

// .gnmi.UpdateResult.Operation op = 4;
void UpdateResult::clear_op() {
  op_ = 0;
}
::gnmi::UpdateResult_Operation UpdateResult::op() const {
  // @@protoc_insertion_point(field_get:gnmi.UpdateResult.op)
  return static_cast< ::gnmi::UpdateResult_Operation >(op_);
}
void UpdateResult::set_op(::gnmi::UpdateResult_Operation value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:gnmi.UpdateResult.op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRequest::kPrefixFieldNumber;
const int GetRequest::kPathFieldNumber;
const int GetRequest::kTypeFieldNumber;
const int GetRequest::kEncodingFieldNumber;
const int GetRequest::kUseModelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRequest::GetRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.GetRequest)
}
GetRequest::GetRequest(const GetRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_(from.path_),
      use_models_(from.use_models_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_prefix()) {
    prefix_ = new ::gnmi::Path(*from.prefix_);
  } else {
    prefix_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&type_) + sizeof(encoding_));
  // @@protoc_insertion_point(copy_constructor:gnmi.GetRequest)
}

void GetRequest::SharedCtor() {
  ::memset(&prefix_, 0, reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&prefix_) + sizeof(encoding_));
  _cached_size_ = 0;
}

GetRequest::~GetRequest() {
  // @@protoc_insertion_point(destructor:gnmi.GetRequest)
  SharedDtor();
}

void GetRequest::SharedDtor() {
  if (this != internal_default_instance()) {
    delete prefix_;
  }
}

void GetRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetRequest::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRequest& GetRequest::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetRequest* GetRequest::New(::google::protobuf::Arena* arena) const {
  GetRequest* n = new GetRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.GetRequest)
  path_.Clear();
  use_models_.Clear();
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) {
    delete prefix_;
  }
  prefix_ = NULL;
  ::memset(&type_, 0, reinterpret_cast<char*>(&encoding_) -
    reinterpret_cast<char*>(&type_) + sizeof(encoding_));
}

bool GetRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.GetRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gnmi.Path prefix = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_prefix()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Path path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.GetRequest.DataType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::gnmi::GetRequest_DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Encoding encoding = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_encoding(static_cast< ::gnmi::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.ModelData use_models = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_use_models()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.GetRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.GetRequest)
  return false;
#undef DO_
}

void GetRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->prefix_, output);
  }

  // repeated .gnmi.Path path = 2;
  for (unsigned int i = 0, n = this->path_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->path(i), output);
  }

  // .gnmi.GetRequest.DataType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // .gnmi.Encoding encoding = 5;
  if (this->encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->encoding(), output);
  }

  // repeated .gnmi.ModelData use_models = 6;
  for (unsigned int i = 0, n = this->use_models_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->use_models(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.GetRequest)
}

::google::protobuf::uint8* GetRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.GetRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->prefix_, deterministic, target);
  }

  // repeated .gnmi.Path path = 2;
  for (unsigned int i = 0, n = this->path_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->path(i), deterministic, target);
  }

  // .gnmi.GetRequest.DataType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // .gnmi.Encoding encoding = 5;
  if (this->encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->encoding(), target);
  }

  // repeated .gnmi.ModelData use_models = 6;
  for (unsigned int i = 0, n = this->use_models_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->use_models(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.GetRequest)
  return target;
}

size_t GetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.GetRequest)
  size_t total_size = 0;

  // repeated .gnmi.Path path = 2;
  {
    unsigned int count = this->path_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->path(i));
    }
  }

  // repeated .gnmi.ModelData use_models = 6;
  {
    unsigned int count = this->use_models_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->use_models(i));
    }
  }

  // .gnmi.Path prefix = 1;
  if (this->has_prefix()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->prefix_);
  }

  // .gnmi.GetRequest.DataType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .gnmi.Encoding encoding = 5;
  if (this->encoding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->encoding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.GetRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.GetRequest)
    MergeFrom(*source);
  }
}

void GetRequest::MergeFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.GetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_.MergeFrom(from.path_);
  use_models_.MergeFrom(from.use_models_);
  if (from.has_prefix()) {
    mutable_prefix()->::gnmi::Path::MergeFrom(from.prefix());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.encoding() != 0) {
    set_encoding(from.encoding());
  }
}

void GetRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRequest::CopyFrom(const GetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.GetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRequest::IsInitialized() const {
  return true;
}

void GetRequest::Swap(GetRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRequest::InternalSwap(GetRequest* other) {
  path_.InternalSwap(&other->path_);
  use_models_.InternalSwap(&other->use_models_);
  std::swap(prefix_, other->prefix_);
  std::swap(type_, other->type_);
  std::swap(encoding_, other->encoding_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetRequest::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetRequest

// .gnmi.Path prefix = 1;
bool GetRequest::has_prefix() const {
  return this != internal_default_instance() && prefix_ != NULL;
}
void GetRequest::clear_prefix() {
  if (GetArenaNoVirtual() == NULL && prefix_ != NULL) delete prefix_;
  prefix_ = NULL;
}
const ::gnmi::Path& GetRequest::prefix() const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.prefix)
  return prefix_ != NULL ? *prefix_
                         : *::gnmi::Path::internal_default_instance();
}
::gnmi::Path* GetRequest::mutable_prefix() {
  
  if (prefix_ == NULL) {
    prefix_ = new ::gnmi::Path;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.GetRequest.prefix)
  return prefix_;
}
::gnmi::Path* GetRequest::release_prefix() {
  // @@protoc_insertion_point(field_release:gnmi.GetRequest.prefix)
  
  ::gnmi::Path* temp = prefix_;
  prefix_ = NULL;
  return temp;
}
void GetRequest::set_allocated_prefix(::gnmi::Path* prefix) {
  delete prefix_;
  prefix_ = prefix;
  if (prefix) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.GetRequest.prefix)
}

// repeated .gnmi.Path path = 2;
int GetRequest::path_size() const {
  return path_.size();
}
void GetRequest::clear_path() {
  path_.Clear();
}
const ::gnmi::Path& GetRequest::path(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.path)
  return path_.Get(index);
}
::gnmi::Path* GetRequest::mutable_path(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.GetRequest.path)
  return path_.Mutable(index);
}
::gnmi::Path* GetRequest::add_path() {
  // @@protoc_insertion_point(field_add:gnmi.GetRequest.path)
  return path_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Path >*
GetRequest::mutable_path() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.GetRequest.path)
  return &path_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Path >&
GetRequest::path() const {
  // @@protoc_insertion_point(field_list:gnmi.GetRequest.path)
  return path_;
}

// .gnmi.GetRequest.DataType type = 3;
void GetRequest::clear_type() {
  type_ = 0;
}
::gnmi::GetRequest_DataType GetRequest::type() const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.type)
  return static_cast< ::gnmi::GetRequest_DataType >(type_);
}
void GetRequest::set_type(::gnmi::GetRequest_DataType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gnmi.GetRequest.type)
}

// .gnmi.Encoding encoding = 5;
void GetRequest::clear_encoding() {
  encoding_ = 0;
}
::gnmi::Encoding GetRequest::encoding() const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.encoding)
  return static_cast< ::gnmi::Encoding >(encoding_);
}
void GetRequest::set_encoding(::gnmi::Encoding value) {
  
  encoding_ = value;
  // @@protoc_insertion_point(field_set:gnmi.GetRequest.encoding)
}

// repeated .gnmi.ModelData use_models = 6;
int GetRequest::use_models_size() const {
  return use_models_.size();
}
void GetRequest::clear_use_models() {
  use_models_.Clear();
}
const ::gnmi::ModelData& GetRequest::use_models(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.GetRequest.use_models)
  return use_models_.Get(index);
}
::gnmi::ModelData* GetRequest::mutable_use_models(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.GetRequest.use_models)
  return use_models_.Mutable(index);
}
::gnmi::ModelData* GetRequest::add_use_models() {
  // @@protoc_insertion_point(field_add:gnmi.GetRequest.use_models)
  return use_models_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
GetRequest::mutable_use_models() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.GetRequest.use_models)
  return &use_models_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
GetRequest::use_models() const {
  // @@protoc_insertion_point(field_list:gnmi.GetRequest.use_models)
  return use_models_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResponse::kNotificationFieldNumber;
const int GetResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResponse::GetResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.GetResponse)
}
GetResponse::GetResponse(const GetResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      notification_(from.notification_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_error()) {
    error_ = new ::gnmi::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.GetResponse)
}

void GetResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

GetResponse::~GetResponse() {
  // @@protoc_insertion_point(destructor:gnmi.GetResponse)
  SharedDtor();
}

void GetResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete error_;
  }
}

void GetResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetResponse::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetResponse& GetResponse::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

GetResponse* GetResponse::New(::google::protobuf::Arena* arena) const {
  GetResponse* n = new GetResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.GetResponse)
  notification_.Clear();
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
}

bool GetResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.GetResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gnmi.Notification notification = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_notification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gnmi.Error error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.GetResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.GetResponse)
  return false;
#undef DO_
}

void GetResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.Notification notification = 1;
  for (unsigned int i = 0, n = this->notification_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notification(i), output);
  }

  // .gnmi.Error error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.GetResponse)
}

::google::protobuf::uint8* GetResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.GetResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.Notification notification = 1;
  for (unsigned int i = 0, n = this->notification_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->notification(i), deterministic, target);
  }

  // .gnmi.Error error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.GetResponse)
  return target;
}

size_t GetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.GetResponse)
  size_t total_size = 0;

  // repeated .gnmi.Notification notification = 1;
  {
    unsigned int count = this->notification_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notification(i));
    }
  }

  // .gnmi.Error error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.GetResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.GetResponse)
    MergeFrom(*source);
  }
}

void GetResponse::MergeFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.GetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notification_.MergeFrom(from.notification_);
  if (from.has_error()) {
    mutable_error()->::gnmi::Error::MergeFrom(from.error());
  }
}

void GetResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponse::CopyFrom(const GetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.GetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponse::IsInitialized() const {
  return true;
}

void GetResponse::Swap(GetResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResponse::InternalSwap(GetResponse* other) {
  notification_.InternalSwap(&other->notification_);
  std::swap(error_, other->error_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetResponse::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetResponse

// repeated .gnmi.Notification notification = 1;
int GetResponse::notification_size() const {
  return notification_.size();
}
void GetResponse::clear_notification() {
  notification_.Clear();
}
const ::gnmi::Notification& GetResponse::notification(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.GetResponse.notification)
  return notification_.Get(index);
}
::gnmi::Notification* GetResponse::mutable_notification(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.GetResponse.notification)
  return notification_.Mutable(index);
}
::gnmi::Notification* GetResponse::add_notification() {
  // @@protoc_insertion_point(field_add:gnmi.GetResponse.notification)
  return notification_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::Notification >*
GetResponse::mutable_notification() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.GetResponse.notification)
  return &notification_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::Notification >&
GetResponse::notification() const {
  // @@protoc_insertion_point(field_list:gnmi.GetResponse.notification)
  return notification_;
}

// .gnmi.Error error = 2;
bool GetResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void GetResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::gnmi::Error& GetResponse::error() const {
  // @@protoc_insertion_point(field_get:gnmi.GetResponse.error)
  return error_ != NULL ? *error_
                         : *::gnmi::Error::internal_default_instance();
}
::gnmi::Error* GetResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::gnmi::Error;
  }
  // @@protoc_insertion_point(field_mutable:gnmi.GetResponse.error)
  return error_;
}
::gnmi::Error* GetResponse::release_error() {
  // @@protoc_insertion_point(field_release:gnmi.GetResponse.error)
  
  ::gnmi::Error* temp = error_;
  error_ = NULL;
  return temp;
}
void GetResponse::set_allocated_error(::gnmi::Error* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gnmi.GetResponse.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilityRequest::CapabilityRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.CapabilityRequest)
}
CapabilityRequest::CapabilityRequest(const CapabilityRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gnmi.CapabilityRequest)
}

void CapabilityRequest::SharedCtor() {
  _cached_size_ = 0;
}

CapabilityRequest::~CapabilityRequest() {
  // @@protoc_insertion_point(destructor:gnmi.CapabilityRequest)
  SharedDtor();
}

void CapabilityRequest::SharedDtor() {
}

void CapabilityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CapabilityRequest::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CapabilityRequest& CapabilityRequest::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

CapabilityRequest* CapabilityRequest::New(::google::protobuf::Arena* arena) const {
  CapabilityRequest* n = new CapabilityRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CapabilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.CapabilityRequest)
}

bool CapabilityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.CapabilityRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.CapabilityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.CapabilityRequest)
  return false;
#undef DO_
}

void CapabilityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.CapabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:gnmi.CapabilityRequest)
}

::google::protobuf::uint8* CapabilityRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.CapabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.CapabilityRequest)
  return target;
}

size_t CapabilityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.CapabilityRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CapabilityRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.CapabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CapabilityRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CapabilityRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.CapabilityRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.CapabilityRequest)
    MergeFrom(*source);
  }
}

void CapabilityRequest::MergeFrom(const CapabilityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.CapabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CapabilityRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.CapabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapabilityRequest::CopyFrom(const CapabilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.CapabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilityRequest::IsInitialized() const {
  return true;
}

void CapabilityRequest::Swap(CapabilityRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CapabilityRequest::InternalSwap(CapabilityRequest* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CapabilityRequest::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CapabilityRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CapabilityResponse::kSupportedModelsFieldNumber;
const int CapabilityResponse::kSupportedEncodingsFieldNumber;
const int CapabilityResponse::kGNMIVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CapabilityResponse::CapabilityResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.CapabilityResponse)
}
CapabilityResponse::CapabilityResponse(const CapabilityResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      supported_models_(from.supported_models_),
      supported_encodings_(from.supported_encodings_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gnmi_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gnmi_version().size() > 0) {
    gnmi_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gnmi_version_);
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.CapabilityResponse)
}

void CapabilityResponse::SharedCtor() {
  gnmi_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CapabilityResponse::~CapabilityResponse() {
  // @@protoc_insertion_point(destructor:gnmi.CapabilityResponse)
  SharedDtor();
}

void CapabilityResponse::SharedDtor() {
  gnmi_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CapabilityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CapabilityResponse::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CapabilityResponse& CapabilityResponse::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

CapabilityResponse* CapabilityResponse::New(::google::protobuf::Arena* arena) const {
  CapabilityResponse* n = new CapabilityResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CapabilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.CapabilityResponse)
  supported_models_.Clear();
  supported_encodings_.Clear();
  gnmi_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CapabilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.CapabilityResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .gnmi.ModelData supported_models = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_supported_models()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gnmi.Encoding supported_encodings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_supported_encodings(static_cast< ::gnmi::Encoding >(value));
          }
          input->PopLimit(limit);
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_supported_encodings(static_cast< ::gnmi::Encoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gNMI_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gnmi_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gnmi_version().data(), this->gnmi_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.CapabilityResponse.gNMI_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.CapabilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.CapabilityResponse)
  return false;
#undef DO_
}

void CapabilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.CapabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.ModelData supported_models = 1;
  for (unsigned int i = 0, n = this->supported_models_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->supported_models(i), output);
  }

  // repeated .gnmi.Encoding supported_encodings = 2;
  if (this->supported_encodings_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_supported_encodings_cached_byte_size_);
  }
  for (int i = 0, n = this->supported_encodings_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->supported_encodings(i), output);
  }

  // string gNMI_version = 3;
  if (this->gnmi_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gnmi_version().data(), this->gnmi_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.CapabilityResponse.gNMI_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gnmi_version(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.CapabilityResponse)
}

::google::protobuf::uint8* CapabilityResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.CapabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gnmi.ModelData supported_models = 1;
  for (unsigned int i = 0, n = this->supported_models_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->supported_models(i), deterministic, target);
  }

  // repeated .gnmi.Encoding supported_encodings = 2;
  if (this->supported_encodings_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _supported_encodings_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->supported_encodings_, target);
  }

  // string gNMI_version = 3;
  if (this->gnmi_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gnmi_version().data(), this->gnmi_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.CapabilityResponse.gNMI_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gnmi_version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.CapabilityResponse)
  return target;
}

size_t CapabilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.CapabilityResponse)
  size_t total_size = 0;

  // repeated .gnmi.ModelData supported_models = 1;
  {
    unsigned int count = this->supported_models_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->supported_models(i));
    }
  }

  // repeated .gnmi.Encoding supported_encodings = 2;
  {
    size_t data_size = 0;
    unsigned int count = this->supported_encodings_size();for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->supported_encodings(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _supported_encodings_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string gNMI_version = 3;
  if (this->gnmi_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gnmi_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CapabilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.CapabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CapabilityResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CapabilityResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.CapabilityResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.CapabilityResponse)
    MergeFrom(*source);
  }
}

void CapabilityResponse::MergeFrom(const CapabilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.CapabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supported_models_.MergeFrom(from.supported_models_);
  supported_encodings_.MergeFrom(from.supported_encodings_);
  if (from.gnmi_version().size() > 0) {

    gnmi_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gnmi_version_);
  }
}

void CapabilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.CapabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CapabilityResponse::CopyFrom(const CapabilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.CapabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CapabilityResponse::IsInitialized() const {
  return true;
}

void CapabilityResponse::Swap(CapabilityResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CapabilityResponse::InternalSwap(CapabilityResponse* other) {
  supported_models_.InternalSwap(&other->supported_models_);
  supported_encodings_.InternalSwap(&other->supported_encodings_);
  gnmi_version_.Swap(&other->gnmi_version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CapabilityResponse::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CapabilityResponse

// repeated .gnmi.ModelData supported_models = 1;
int CapabilityResponse::supported_models_size() const {
  return supported_models_.size();
}
void CapabilityResponse::clear_supported_models() {
  supported_models_.Clear();
}
const ::gnmi::ModelData& CapabilityResponse::supported_models(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.CapabilityResponse.supported_models)
  return supported_models_.Get(index);
}
::gnmi::ModelData* CapabilityResponse::mutable_supported_models(int index) {
  // @@protoc_insertion_point(field_mutable:gnmi.CapabilityResponse.supported_models)
  return supported_models_.Mutable(index);
}
::gnmi::ModelData* CapabilityResponse::add_supported_models() {
  // @@protoc_insertion_point(field_add:gnmi.CapabilityResponse.supported_models)
  return supported_models_.Add();
}
::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >*
CapabilityResponse::mutable_supported_models() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.CapabilityResponse.supported_models)
  return &supported_models_;
}
const ::google::protobuf::RepeatedPtrField< ::gnmi::ModelData >&
CapabilityResponse::supported_models() const {
  // @@protoc_insertion_point(field_list:gnmi.CapabilityResponse.supported_models)
  return supported_models_;
}

// repeated .gnmi.Encoding supported_encodings = 2;
int CapabilityResponse::supported_encodings_size() const {
  return supported_encodings_.size();
}
void CapabilityResponse::clear_supported_encodings() {
  supported_encodings_.Clear();
}
::gnmi::Encoding CapabilityResponse::supported_encodings(int index) const {
  // @@protoc_insertion_point(field_get:gnmi.CapabilityResponse.supported_encodings)
  return static_cast< ::gnmi::Encoding >(supported_encodings_.Get(index));
}
void CapabilityResponse::set_supported_encodings(int index, ::gnmi::Encoding value) {
  supported_encodings_.Set(index, value);
  // @@protoc_insertion_point(field_set:gnmi.CapabilityResponse.supported_encodings)
}
void CapabilityResponse::add_supported_encodings(::gnmi::Encoding value) {
  supported_encodings_.Add(value);
  // @@protoc_insertion_point(field_add:gnmi.CapabilityResponse.supported_encodings)
}
const ::google::protobuf::RepeatedField<int>&
CapabilityResponse::supported_encodings() const {
  // @@protoc_insertion_point(field_list:gnmi.CapabilityResponse.supported_encodings)
  return supported_encodings_;
}
::google::protobuf::RepeatedField<int>*
CapabilityResponse::mutable_supported_encodings() {
  // @@protoc_insertion_point(field_mutable_list:gnmi.CapabilityResponse.supported_encodings)
  return &supported_encodings_;
}

// string gNMI_version = 3;
void CapabilityResponse::clear_gnmi_version() {
  gnmi_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CapabilityResponse::gnmi_version() const {
  // @@protoc_insertion_point(field_get:gnmi.CapabilityResponse.gNMI_version)
  return gnmi_version_.GetNoArena();
}
void CapabilityResponse::set_gnmi_version(const ::std::string& value) {
  
  gnmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.CapabilityResponse.gNMI_version)
}
#if LANG_CXX11
void CapabilityResponse::set_gnmi_version(::std::string&& value) {
  
  gnmi_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.CapabilityResponse.gNMI_version)
}
#endif
void CapabilityResponse::set_gnmi_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gnmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.CapabilityResponse.gNMI_version)
}
void CapabilityResponse::set_gnmi_version(const char* value, size_t size) {
  
  gnmi_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.CapabilityResponse.gNMI_version)
}
::std::string* CapabilityResponse::mutable_gnmi_version() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.CapabilityResponse.gNMI_version)
  return gnmi_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CapabilityResponse::release_gnmi_version() {
  // @@protoc_insertion_point(field_release:gnmi.CapabilityResponse.gNMI_version)
  
  return gnmi_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CapabilityResponse::set_allocated_gnmi_version(::std::string* gnmi_version) {
  if (gnmi_version != NULL) {
    
  } else {
    
  }
  gnmi_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gnmi_version);
  // @@protoc_insertion_point(field_set_allocated:gnmi.CapabilityResponse.gNMI_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelData::kNameFieldNumber;
const int ModelData::kOrganizationFieldNumber;
const int ModelData::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelData::ModelData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gnmi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gnmi.ModelData)
}
ModelData::ModelData(const ModelData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  organization_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.organization().size() > 0) {
    organization_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:gnmi.ModelData)
}

void ModelData::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ModelData::~ModelData() {
  // @@protoc_insertion_point(destructor:gnmi.ModelData)
  SharedDtor();
}

void ModelData::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModelData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelData::descriptor() {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelData& ModelData::default_instance() {
  protobuf_gnmi_2eproto::InitDefaults();
  return *internal_default_instance();
}

ModelData* ModelData::New(::google::protobuf::Arena* arena) const {
  ModelData* n = new ModelData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelData::Clear() {
// @@protoc_insertion_point(message_clear_start:gnmi.ModelData)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ModelData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gnmi.ModelData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.ModelData.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string organization = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_organization()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->organization().data(), this->organization().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.ModelData.organization"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gnmi.ModelData.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gnmi.ModelData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gnmi.ModelData)
  return false;
#undef DO_
}

void ModelData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gnmi.ModelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string organization = 2;
  if (this->organization().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization().data(), this->organization().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.organization");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->organization(), output);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  // @@protoc_insertion_point(serialize_end:gnmi.ModelData)
}

::google::protobuf::uint8* ModelData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gnmi.ModelData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string organization = 2;
  if (this->organization().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->organization().data(), this->organization().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.organization");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->organization(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gnmi.ModelData.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gnmi.ModelData)
  return target;
}

size_t ModelData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gnmi.ModelData)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string organization = 2;
  if (this->organization().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->organization());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gnmi.ModelData)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gnmi.ModelData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gnmi.ModelData)
    MergeFrom(*source);
  }
}

void ModelData::MergeFrom(const ModelData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gnmi.ModelData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.organization().size() > 0) {

    organization_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.organization_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void ModelData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gnmi.ModelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelData::CopyFrom(const ModelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gnmi.ModelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelData::IsInitialized() const {
  return true;
}

void ModelData::Swap(ModelData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelData::InternalSwap(ModelData* other) {
  name_.Swap(&other->name_);
  organization_.Swap(&other->organization_);
  version_.Swap(&other->version_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelData::GetMetadata() const {
  protobuf_gnmi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gnmi_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelData

// string name = 1;
void ModelData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModelData::name() const {
  // @@protoc_insertion_point(field_get:gnmi.ModelData.name)
  return name_.GetNoArena();
}
void ModelData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.ModelData.name)
}
#if LANG_CXX11
void ModelData::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.ModelData.name)
}
#endif
void ModelData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.ModelData.name)
}
void ModelData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.ModelData.name)
}
::std::string* ModelData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.ModelData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelData::release_name() {
  // @@protoc_insertion_point(field_release:gnmi.ModelData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gnmi.ModelData.name)
}

// string organization = 2;
void ModelData::clear_organization() {
  organization_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModelData::organization() const {
  // @@protoc_insertion_point(field_get:gnmi.ModelData.organization)
  return organization_.GetNoArena();
}
void ModelData::set_organization(const ::std::string& value) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.ModelData.organization)
}
#if LANG_CXX11
void ModelData::set_organization(::std::string&& value) {
  
  organization_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.ModelData.organization)
}
#endif
void ModelData::set_organization(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.ModelData.organization)
}
void ModelData::set_organization(const char* value, size_t size) {
  
  organization_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.ModelData.organization)
}
::std::string* ModelData::mutable_organization() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.ModelData.organization)
  return organization_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelData::release_organization() {
  // @@protoc_insertion_point(field_release:gnmi.ModelData.organization)
  
  return organization_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelData::set_allocated_organization(::std::string* organization) {
  if (organization != NULL) {
    
  } else {
    
  }
  organization_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), organization);
  // @@protoc_insertion_point(field_set_allocated:gnmi.ModelData.organization)
}

// string version = 3;
void ModelData::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ModelData::version() const {
  // @@protoc_insertion_point(field_get:gnmi.ModelData.version)
  return version_.GetNoArena();
}
void ModelData::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gnmi.ModelData.version)
}
#if LANG_CXX11
void ModelData::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gnmi.ModelData.version)
}
#endif
void ModelData::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gnmi.ModelData.version)
}
void ModelData::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gnmi.ModelData.version)
}
::std::string* ModelData::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:gnmi.ModelData.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelData::release_version() {
  // @@protoc_insertion_point(field_release:gnmi.ModelData.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelData::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:gnmi.ModelData.version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
const ::std::string gnmi_service_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  gnmi_service(kGnmiServiceFieldNumber, gnmi_service_default);

// @@protoc_insertion_point(namespace_scope)

}  // namespace gnmi

// @@protoc_insertion_point(global_scope)
